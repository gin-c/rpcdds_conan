/*************************************************************************
 * Copyright (c) 2013 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * rpcdds_LICENSE file included in this rpcdds distribution.
 *
 *************************************************************************
 *
 * @file AIOpenApiProxyImplExample.h
 * This header file contains an example of the declaration of a servant.
 *
 * This file was generated by the tool rpcddsgen.
 */

#ifndef _AIOpenApiPROXY_IMPL_EXAMPLE_H_
#define _AIOpenApiPROXY_IMPL_EXAMPLE_H_

#include "AIOpenApiProxyImpl.h"

/*!
 * @brief This class is an example of a servant and it implements the remote procedures of the servant.
 * @ingroup AIOPENAPI
 */
class VSPProxyImplExample : public AI::OpenApi::VSPProxyImpl {
public:
    //! @brief The default constructor.
    VSPProxyImplExample() {}

    //! @brief Destructor.
    virtual ~VSPProxyImplExample() {}

    //! @brief Implementation of the remote procedure init
    void initHandle(const std::string& sendId, /*in*/ int32_t state);

    //! @brief Implementation of the remote procedure ready
    void readyHandle(const std::string& sendId);

    //! @brief Implementation of the remote procedure vadBegin
    void vadBeginHandle(const std::string& sendId);

    //! @brief Implementation of the remote procedure vadEnd
    void vadEndHandle(const std::string& sendId);

    //! @brief Implementation of the remote procedure error
    void errorHandle(const std::string& sendId, /*in*/ const AI::Error& error);

    //! @brief Implementation of the remote procedure partial
    void partialHandle(const std::string& sendId, /*in*/ const std::string& text);

    //! @brief Implementation of the remote procedure finalResult
    void finalResultHandle(const std::string& sendId, /*in*/ const std::string& text);

    ;
};

/*!
 * @brief This class is an example of a servant and it implements the remote procedures of the servant.
 * @ingroup AIOPENAPI
 */
class PhotoProxyImplExample : public AI::OpenApi::PhotoProxyImpl {
public:
    //! @brief The default constructor.
    PhotoProxyImplExample() {}

    //! @brief Destructor.
    virtual ~PhotoProxyImplExample(){}

    ;
};

#endif  // _AIOpenApiPROXY_IMPL_EXAMPLE_H_