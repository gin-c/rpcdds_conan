/*************************************************************************
 * Copyright (c) 2013 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * rpcdds_LICENSE file included in this rpcdds distribution.
 *
 *************************************************************************
 *
 * @file AIOpenApiProxy.h
 * This header file contains the declaration of the proxy for all interfaces.
 *
 * This file was generated by the tool rpcddsgen.
 */

#ifndef _AIOpenApi_PROXY_H_
#define _AIOpenApi_PROXY_H_

#include "AIOpenApi.h"
#include "AIOpenApiProxyImpl.h"
#include <rpcdds/client/Proxy.h>

#include "AIOpenApiAsyncCallbackHandlers.h"

namespace eprosima {
namespace rpc {
namespace protocol {
class AIOpenApiProtocol;
}
}  // namespace rpc
}  // namespace eprosima

namespace AI {

namespace OpenApi {
/*!
 * @brief This class implements a specific server's proxy for the defined interface VSP.
 * @ingroup AIOPENAPI
 */
class RPCUSERDllExport VSPProxy : public eprosima::rpc::proxy::Proxy, public VSP {
public:
    /*!
     * @brief This constructor sets the transport that will be used by the server's proxy.
     *
     * @param transport The network transport that server's proxy has to use.
     *        This transport's object is not deleted by this class in its destructor. Cannot be NULL.
     * @param protocol The protocol used to send the information over the transport.
     *        This protocol's object is not deleted by this class in its destructor. Cannot be NULL.
     * @exception eprosima::rpc::exception::InitializeException This exception is thrown when the initialization was
     * wrong.
     */
    VSPProxy(eprosima::rpc::strategy::ServerStrategy &strategy, eprosima::rpc::transport::ProxyTransport &transport,
             eprosima::rpc::protocol::AIOpenApiProtocol &protocol, VSPProxyImpl &servant);

    //! @brief Destructor.
    virtual ~VSPProxy();

    //! @brief Proxy method for the operation beginVoice.
    bool beginVoice();

    //! @brief Proxy asynchronous method for the operation beginVoice.
    void beginVoice_async(AI::OpenApi::VSP_beginVoiceCallbackHandler &obj);

    //! @brief Proxy method for the operation stopVoice.
    bool stopVoice();

    //! @brief Proxy asynchronous method for the operation stopVoice.
    void stopVoice_async(AI::OpenApi::VSP_stopVoiceCallbackHandler &obj);

private:
    //! \brief Pointer to the server's servant implemented by the user.
    VSPProxyImpl &_impl;
};

/*!
 * @brief This class implements a specific server's proxy for the defined interface Photo.
 * @ingroup AIOPENAPI
 */
class RPCUSERDllExport PhotoProxy : public eprosima::rpc::proxy::Proxy, public Photo {
public:
    /*!
     * @brief This constructor sets the transport that will be used by the server's proxy.
     *
     * @param transport The network transport that server's proxy has to use.
     *        This transport's object is not deleted by this class in its destructor. Cannot be NULL.
     * @param protocol The protocol used to send the information over the transport.
     *        This protocol's object is not deleted by this class in its destructor. Cannot be NULL.
     * @exception eprosima::rpc::exception::InitializeException This exception is thrown when the initialization was
     * wrong.
     */
    PhotoProxy(eprosima::rpc::strategy::ServerStrategy &strategy, eprosima::rpc::transport::ProxyTransport &transport,
               eprosima::rpc::protocol::AIOpenApiProtocol &protocol, PhotoProxyImpl &servant);

    //! @brief Destructor.
    virtual ~PhotoProxy();

    //! @brief Proxy method for the operation getPhotoInfo.
    std::string getPhotoInfo(/*in*/ const std::string &pId);

    //! @brief Proxy asynchronous method for the operation getPhotoInfo.
    void getPhotoInfo_async(AI::OpenApi::Photo_getPhotoInfoCallbackHandler &obj, /*in*/ const std::string &pId);

private:
    //! \brief Pointer to the server's servant implemented by the user.
    PhotoProxyImpl &_impl;
};

};  // namespace OpenApi

};  // namespace AI

#endif  // _AIOpenApi_PROXY_H_