/*************************************************************************
 * Copyright (c) 2013 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * rpcrest_LICENSE file included in this rpcrest distribution.
 *
 *************************************************************************
 * 
 * @file CalculatorServerImpl.h
 * This header file contains the declaration of the skeleton for all interfaces.
 *
 * This file was generated by the tool rpcrestgen.
 */

#ifndef _CalculatorSERVER_IMPL_H_
#define _CalculatorSERVER_IMPL_H_

#include "rpcrest/utils/Messages.h"
#include "Calculator.h"

namespace Calculator
{
    /*!
     * @brief This class is the skeleton of the servant and its remote procedures has to be implemented.
     * @ingroup CALCULATOR
     */
    class addResourceServerImpl
    {
        public:

            //! @brief The default constructor.
            addResourceServerImpl(){}

            //! @brief Destructor.
            virtual ~addResourceServerImpl(){}




            //! @brief Skeleton of the operation add.
            virtual Calculator::addResource::AddResponse add(/*in*/ int32_t a, /*in*/ int32_t b) = 0;
    ;
    };

    /*!
     * @brief This class is the skeleton of the servant and its remote procedures has to be implemented.
     * @ingroup CALCULATOR
     */
    class substractResourceServerImpl
    {
        public:

            //! @brief The default constructor.
            substractResourceServerImpl(){}

            //! @brief Destructor.
            virtual ~substractResourceServerImpl(){}




            //! @brief Skeleton of the operation substract.
            virtual Calculator::substractResource::SubstractResponse substract(/*in*/ int32_t a, /*in*/ int32_t b) = 0;
    ;
    };

    /*!
     * @brief This class is the skeleton of the servant and its remote procedures has to be implemented.
     * @ingroup CALCULATOR
     */
    class multiplyResourceServerImpl
    {
        public:

            //! @brief The default constructor.
            multiplyResourceServerImpl(){}

            //! @brief Destructor.
            virtual ~multiplyResourceServerImpl(){}




            //! @brief Skeleton of the operation multiply.
            virtual Calculator::multiplyResource::MultiplyResponse multiply(/*in*/ int32_t a, /*in*/ int32_t b) = 0;
    ;
    };

    /*!
     * @brief This class is the skeleton of the servant and its remote procedures has to be implemented.
     * @ingroup CALCULATOR
     */
    class divideResourceServerImpl
    {
        public:

            //! @brief The default constructor.
            divideResourceServerImpl(){}

            //! @brief Destructor.
            virtual ~divideResourceServerImpl(){}




            //! @brief Skeleton of the operation divide.
            virtual Calculator::divideResource::DivideResponse divide(/*in*/ int32_t a, /*in*/ int32_t b) = 0;
    ;
    };

};


#endif // _CalculatorSERVER_IMPL_H_