/*************************************************************************
 * Copyright (c) 2013 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * rpcrest_LICENSE file included in this rpcrest distribution.
 *
 *************************************************************************
 * 
 * @file CalculatorServer.cxx
 * This source file contains the definition of the server for all interfaces.
 *
 * This file was generated by the tool rpcrestgen.
 */

#include "CalculatorServer.h"
#include "rpcrest/strategies/ServerStrategy.h"
#include "rpcrest/transports/ServerTransport.h"
#include "CalculatorProtocol.h"
#include "rpcrest/exceptions/ServerInternalException.h"

namespace Calculator
{
    addResourceServer::addResourceServer(eprosima::rpc::strategy::ServerStrategy &strategy, eprosima::rpc::transport::ServerTransport &transport,
                eprosima::rpc::protocol::CalculatorProtocol &protocol, addResourceServerImpl &servant) :
        Server(strategy, transport, protocol), _impl(servant)
    {
       protocol.activateInterface("Calculator::addResource");
       protocol.linkCalculator_addResourceImpl(servant);
    }

    addResourceServer::~addResourceServer()
    {
        //TODO Unlink an deactivate.
    }






    substractResourceServer::substractResourceServer(eprosima::rpc::strategy::ServerStrategy &strategy, eprosima::rpc::transport::ServerTransport &transport,
                eprosima::rpc::protocol::CalculatorProtocol &protocol, substractResourceServerImpl &servant) :
        Server(strategy, transport, protocol), _impl(servant)
    {
       protocol.activateInterface("Calculator::substractResource");
       protocol.linkCalculator_substractResourceImpl(servant);
    }

    substractResourceServer::~substractResourceServer()
    {
        //TODO Unlink an deactivate.
    }






    multiplyResourceServer::multiplyResourceServer(eprosima::rpc::strategy::ServerStrategy &strategy, eprosima::rpc::transport::ServerTransport &transport,
                eprosima::rpc::protocol::CalculatorProtocol &protocol, multiplyResourceServerImpl &servant) :
        Server(strategy, transport, protocol), _impl(servant)
    {
       protocol.activateInterface("Calculator::multiplyResource");
       protocol.linkCalculator_multiplyResourceImpl(servant);
    }

    multiplyResourceServer::~multiplyResourceServer()
    {
        //TODO Unlink an deactivate.
    }






    divideResourceServer::divideResourceServer(eprosima::rpc::strategy::ServerStrategy &strategy, eprosima::rpc::transport::ServerTransport &transport,
                eprosima::rpc::protocol::CalculatorProtocol &protocol, divideResourceServerImpl &servant) :
        Server(strategy, transport, protocol), _impl(servant)
    {
       protocol.activateInterface("Calculator::divideResource");
       protocol.linkCalculator_divideResourceImpl(servant);
    }

    divideResourceServer::~divideResourceServer()
    {
        //TODO Unlink an deactivate.
    }






};
