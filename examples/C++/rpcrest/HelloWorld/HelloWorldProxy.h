/*************************************************************************
 * Copyright (c) 2013 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * rpcrest_LICENSE file included in this rpcrest distribution.
 *
 *************************************************************************
 * 
 * @file HelloWorldProxy.h
 * This header file contains the declaration of the proxy for all interfaces.
 *
 * This file was generated by the tool rpcrestgen.
 */

#ifndef _HelloWorld_PROXY_H_
#define _HelloWorld_PROXY_H_

#include "rpcrest/client/Proxy.h"
#include "HelloWorld.h"
namespace eprosima
{
    namespace rpc
    {
        namespace protocol
        {
            class HelloWorldProtocol;
        }
    }
}

namespace HelloWorld
{
    /*!
     * @brief This class implements a specific server's proxy for the defined interface HelloWorldResource.
     * @ingroup HELLOWORLD
     */
    class RPCUSERDllExport HelloWorldResourceProxy : public eprosima::rpc::proxy::Proxy
    {
        public:
       
            /*!
             * @brief This constructor sets the transport that will be used by the server's proxy.
             *
             * @param transport The network transport that server's proxy has to use.
             *        This transport's object is not deleted by this class in its destructor. Cannot be NULL.
             * @param protocol The protocol used to send the information over the transport.
             *        This protocol's object is not deleted by this class in its destructor. Cannot be NULL.
             * @exception eprosima::rpc::exception::InitializeException This exception is thrown when the initialization was wrong.
             */
            HelloWorldResourceProxy(eprosima::rpc::transport::ProxyTransport &transport,
                eprosima::rpc::protocol::HelloWorldProtocol &protocol);

            //! @brief Destructor.
            virtual ~HelloWorldResourceProxy();
            



            //! @brief Proxy method for the operation hello.
            HelloWorld::HelloWorldResource::HelloResponse hello(/*in*/ const std::string& name);


    };

};


#endif // _HelloWorld_PROXY_H_
