/*************************************************************************
 * Copyright (c) 2013 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * rpcrest_LICENSE file included in this rpcrest distribution.
 *
 *************************************************************************
 * 
 * @file BankProtocol.h
 * This header file contains the declaration of the interface for all protocols.
 *
 * This file was generated by the tool rpcrestgen.
 */

#ifndef _Bank_PROTOCOL_H_
#define _Bank_PROTOCOL_H_

#include "rpcrest/protocols/Protocol.h"
#include "Bank.h"
#include "BankServerImpl.h"

namespace eprosima
{
    namespace rpc
    {
        namespace protocol
        {
            /*!
             * @brief Protocol base class for the specific application
             * @ingroup BANK
             */
            class RPCUSERDllExport BankProtocol : public Protocol
            {
                public:
                
                   /*!
                    * @brief This method sets the transport for the communications. It has to be implemented by the children classes.
                    * @param transport Transport to use.
                    * @return True if the assignment is successful, false otherwise
                    */
                    virtual bool setTransport(eprosima::rpc::transport::Transport &transport) = 0;
                    
                        /*!
                         * @brief In some protocols this function activates needed entities to use an interface.
                         * @param interfaceName Interface name.
                         * @return Whether the activation works successfully.
                         */
                    virtual bool activateInterface(const char* interfaceName) = 0;
                    

                                       /*!
                                        * @brief This method links a specific servant with the protocol.
                                        * @param impl Servant implementation.
                                        */
                                        void linkBank_account_accountNumberResourceImpl(Bank::account_accountNumberResourceServerImpl &impl)
                                        {
                                            _Bank_account_accountNumberResource_impl = &impl;
                                        }
                                        
                             





                    /*!
                     * @brief This method implements the proxy part of the protocol for the operation getAccountDetails.
                     *        It has to be implemented by the child classes.
                     */
                    virtual Bank::account_accountNumberResource::GetAccountDetailsResponse Bank_account_accountNumberResource_getAccountDetails(/*in*/ const Bank::account_accountNumberResource::account_accountNumber& account_accountNumber, /*in*/ const std::string& user, /*in*/ const Bank::account_accountNumberResource::GetAccountDetailsRequest& GetAccountDetailsRequest) = 0;



                    
                protected:
                
                    BankProtocol() : Protocol()
                                         
                                        , _Bank_account_accountNumberResource_impl(NULL)
                                        
                    {}
                    
                    virtual ~BankProtocol(){}
                
                	                     
                	                    Bank::account_accountNumberResourceServerImpl *_Bank_account_accountNumberResource_impl;
                	                    
                    
            };
        } // namespace protocol
    } // namespace rpc
} // namespace eprosima

#endif // _Bank_PROTOCOL_H_
