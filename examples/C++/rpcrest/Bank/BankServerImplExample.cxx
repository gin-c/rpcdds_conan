/*************************************************************************
 * Copyright (c) 2013 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * rpcrest_LICENSE file included in this rpcrest distribution.
 *
 *************************************************************************
 * 
 * @file BankServerImplExample.cxx
 * This source file contains an example of the declaration of a servant.
 *
 * This file was generated by the tool rpcrestgen.
 */

#include "BankServerImplExample.h"
#include <iostream>

using namespace std;


Bank::account_accountNumberResource::GetAccountDetailsResponse account_accountNumberResourceServerImplExample::getAccountDetails(/*in*/ const Bank::account_accountNumberResource::account_accountNumber& account_accountNumber, /*in*/ const std::string& user, /*in*/ const Bank::account_accountNumberResource::GetAccountDetailsRequest& GetAccountDetailsRequest)
{
    Bank::account_accountNumberResource::GetAccountDetailsResponse getAccountDetails_ret;

	cout << "Account number (embedded parameter): " << account_accountNumber.accountNumber_() << endl;
	cout << "User (query parameter): " << user << endl;

	if(GetAccountDetailsRequest._d() == 1)
    {
		cout << "Password (XML body parameter): " << GetAccountDetailsRequest.xmlRepresentation() << endl;
	}

	getAccountDetails_ret._d() = 1;
	getAccountDetails_ret.xmlGetAccountDetailsResponse().status(200);
	getAccountDetails_ret.xmlGetAccountDetailsResponse().xmlRepresentation("<AccountDetails> ... </AccountDetails>");

    return getAccountDetails_ret;
} 
