/*************************************************************************
 * Copyright (c) 2013 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * rpcdds_LICENSE file included in this rpcdds distribution.
 *
 *************************************************************************
 * 
 * @file CalculatorProxy.cxx
 * This source file contains the definition of the proxy for all interfaces.
 *
 * This file was generated by the tool rpcddsgen.
 */

#include "CalculatorProxy.h"
#include <rpcdds/transports/ProxyTransport.h>
#include "CalculatorProtocol.h"





CalculatorProxy::CalculatorProxy(eprosima::rpc::strategy::ServerStrategy &strategy, eprosima::rpc::transport::ProxyTransport &transport,
    eprosima::rpc::protocol::CalculatorProtocol &protocol, CalculatorProxyImpl &servant) :
    Proxy(strategy, transport, protocol), _impl(servant)
{
    protocol.activateInterface("Calculator");
    protocol.linkCalculatorNotifyImpl(servant);
}

CalculatorProxy::~CalculatorProxy()
{
}
 
bool CalculatorProxy::sendTouchEvent(/*in*/ int32_t action, /*in*/ int32_t width, /*in*/ int32_t height, /*in*/ int32_t count, /*in*/ const LongArray& trackID, /*in*/ const LongArray& x, /*in*/ const LongArray& y)
{
    bool return_ =
    dynamic_cast<eprosima::rpc::protocol::CalculatorProtocol&>(getProtocol()).Calculator_sendTouchEvent(action, width, height, count, trackID, x, y);
    return return_;
}
void CalculatorProxy::sendTouchEvent_async(Calculator_sendTouchEventCallbackHandler &obj, /*in*/ int32_t action, /*in*/ int32_t width, /*in*/ int32_t height, /*in*/ int32_t count, /*in*/ const LongArray& trackID, /*in*/ const LongArray& x, /*in*/ const LongArray& y)
{
    dynamic_cast<eprosima::rpc::protocol::CalculatorProtocol&>(getProtocol()).Calculator_sendTouchEvent_async(obj, action, width, height, count, trackID, x, y);
}

bool CalculatorProxy::sendGotoForeground()
{
    bool return_ =
    dynamic_cast<eprosima::rpc::protocol::CalculatorProtocol&>(getProtocol()).Calculator_sendGotoForeground();
    return return_;
}
void CalculatorProxy::sendGotoForeground_async(Calculator_sendGotoForegroundCallbackHandler &obj)
{
    dynamic_cast<eprosima::rpc::protocol::CalculatorProtocol&>(getProtocol()).Calculator_sendGotoForeground_async(obj);
}








