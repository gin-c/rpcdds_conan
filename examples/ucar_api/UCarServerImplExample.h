/*************************************************************************
 * Copyright (c) 2013 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * rpcdds_LICENSE file included in this rpcdds distribution.
 *
 *************************************************************************
 *
 * @file UCarServerImplExample.h
 * This header file contains an example of the declaration of a servant.
 *
 * This file was generated by the tool rpcddsgen.
 */

#ifndef _UCarSERVER_IMPL_EXAMPLE_H_
#define _UCarSERVER_IMPL_EXAMPLE_H_

#include "UCarServerImpl.h"

/*!
 * @brief This class is an example of a servant and it implements the remote procedures of the servant.
 * @ingroup UCAR
 */
class UCarServerImplExample : public UCarServerImpl {
public:
    //! @brief The default constructor.
    UCarServerImplExample() {}

    //! @brief Destructor.
    virtual ~UCarServerImplExample() {}
    bool sendTouchEventHandle(const std::string& sendId, int32_t action, int32_t width, int32_t height, int32_t count,
                              const LongArray& trackID, const LongArray& x, const LongArray& y) override;
    bool sendMicRecordDataHandle(const std::string& sendId, int32_t i, const ShortArray& shorts, int32_t l) override;
    bool sendKeyEventHandle(const std::string& sendId, int32_t keyEventActionType, int32_t keyCodeType,
                            int32_t i) override;
    bool sendGotoForegroundHandle(const std::string& sendId) override;
    bool sendGotoBackgroundHandle(const std::string& sendId) override;
    bool sendVRCMDHandle(const std::string& sendId, int32_t vrcmdType, const std::string& s) override;
    bool notifyIsCallHungUpHandle(const std::string& sendId) override;
    bool notifySwitchDayOrNightHandle(const std::string& sendId, int32_t dayNightMode) override;
    bool awakenVoiceAssistantHandle(const std::string& sendId, const ByteArray& bytes,
                                    const AudioFormat& audioFormat) override;
    bool presetVendorCustomFieldsHandle(const std::string& sendId, const ByteArray& bytes) override;
    bool presetConnectModeHandle(const std::string& sendId, int32_t connectMode) override;
    ;
};

#endif  // _UCarSERVER_IMPL_EXAMPLE_H_