/*************************************************************************
 * Copyright (c) 2013 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * rpcdds_LICENSE file included in this rpcdds distribution.
 *
 *************************************************************************
 * 
 * @file ucarServer.cxx
 * This source file contains the definition of the server for all interfaces.
 *
 * This file was generated by the tool rpcddsgen.
 */

#include "ucarServer.h"
#include <rpcdds/strategies/ServerStrategy.h>
#include <rpcdds/transports/ServerTransport.h>
#include "ucarProtocol.h"
#include <rpcdds/exceptions/ServerInternalException.h>









UCarServer::UCarServer(eprosima::rpc::strategy::ServerStrategy &strategy, eprosima::rpc::transport::ServerTransport &transport,
            eprosima::rpc::protocol::ucarProtocol &protocol, UCarServerImpl &servant) :
    Server(strategy, transport, protocol), _impl(servant)
{
   protocol.activateInterface("UCar");
   protocol.linkUCarImpl(servant);
}

UCarServer::~UCarServer()
{
    //TODO Unlink an deactivate.
}












void UCarServer::videoInitialized(/*in*/ int32_t type, /*in*/ const VideoFormat& videFormat)
{
    dynamic_cast<eprosima::rpc::protocol::ucarProtocol&>(getProtocol()).UCar_videoInitialized(type, videFormat);
}

void UCarServer::videoDataReceived(/*in*/ int32_t type, /*in*/ int32_t size, /*in*/ const ByteArray& byte)
{
    dynamic_cast<eprosima::rpc::protocol::ucarProtocol&>(getProtocol()).UCar_videoDataReceived(type, size, byte);
}

void UCarServer::requestGotoHUDesktop()
{
    dynamic_cast<eprosima::rpc::protocol::ucarProtocol&>(getProtocol()).UCar_requestGotoHUDesktop();
}

void UCarServer::audioStateChanged(/*in*/ int32_t var2, /*in*/ const AudioFormat& audioFormat, /*in*/ int32_t playerState)
{
    dynamic_cast<eprosima::rpc::protocol::ucarProtocol&>(getProtocol()).UCar_audioStateChanged(var2, audioFormat, playerState);
}

void UCarServer::audioDataReceived(/*in*/ int32_t var2, /*in*/ int32_t var3, /*in*/ const ByteArray& var4)
{
    dynamic_cast<eprosima::rpc::protocol::ucarProtocol&>(getProtocol()).UCar_audioDataReceived(var2, var3, var4);
}

void UCarServer::musicInfoReceived(/*in*/ const MusicInfo& var2)
{
    dynamic_cast<eprosima::rpc::protocol::ucarProtocol&>(getProtocol()).UCar_musicInfoReceived(var2);
}

void UCarServer::navigationInfoReceived(/*in*/ const NavigationInfo& var2)
{
    dynamic_cast<eprosima::rpc::protocol::ucarProtocol&>(getProtocol()).UCar_navigationInfoReceived(var2);
}

void UCarServer::phoneStateInfoReceived(/*in*/ const PhoneStateInfo& var2)
{
    dynamic_cast<eprosima::rpc::protocol::ucarProtocol&>(getProtocol()).UCar_phoneStateInfoReceived(var2);
}

void UCarServer::micRecordRequest(/*in*/ const AudioFormat& var2, /*in*/ bool var3)
{
    dynamic_cast<eprosima::rpc::protocol::ucarProtocol&>(getProtocol()).UCar_micRecordRequest(var2, var3);
}

void UCarServer::userInterventionNeeded()
{
    dynamic_cast<eprosima::rpc::protocol::ucarProtocol&>(getProtocol()).UCar_userInterventionNeeded();
}























