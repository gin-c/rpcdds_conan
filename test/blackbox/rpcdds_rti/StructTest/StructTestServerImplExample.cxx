/*************************************************************************
 * Copyright (c) 2012 eProsima. All rights reserved.
 *
 * This copy of FASTRPC is licensed to you under the terms described in the
 * FASTRPC_LICENSE file included in this distribution.
 *
 *************************************************************************
 * 
 * @file StructTestServerImplExample.cxx
 * This source file contains the definition of the skeleton for all interfaces.
 *
 * This file was generated by the tool rpcddsgen.
 */

#include "StructTestServerImplExample.h"

#include <ndds/ndds_namespace_cpp.h>
 
Recepcion StructTestServerImplExample::duplicate(/*in*/ const Envio& ev) 
{
    Recepcion duplicate_ret;
        
	duplicate_ret.devolucion = ev.dato;
	duplicate_ret.message = DDS_String_dup(ev.message);
   
    return duplicate_ret;
} 
 
Recepcion StructTestServerImplExample::suma(/*in*/ const Envio& ev1, /*in*/ const Envio& ev2) 
{
    Recepcion suma_ret;
        
	suma_ret.devolucion = ev1.dato + ev2.dato;
	suma_ret.message = DDS_String_alloc(strlen(ev1.message) + strlen(ev2.message) + 1);
#if defined(_WIN32)
	_snprintf(suma_ret.message, strlen(ev1.message) + strlen(ev2.message) + 1, "%s%s", ev1.message, ev2.message);
#elif defined(__linux)
	snprintf(suma_ret.message, strlen(ev1.message) + strlen(ev2.message) + 1, "%s%s", ev1.message, ev2.message);
#endif
   
    return suma_ret;
} 

StructTest::InnerStruct StructTestServerImplExample::inner(/*in*/ const StructTest::InnerStruct& inn)
{
    StructTest::InnerStruct inner_ret;

    inner_ret.count = inn.count;
    inner_ret.message = DDS_String_dup(inn.message);
   
    return inner_ret;
} 
