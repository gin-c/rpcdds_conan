/*************************************************************************
 * Copyright (c) 2013 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * fastrpc_LICENSE file included in this fastrpc distribution.
 *
 *************************************************************************
 * 
 * @file WANTestServerExample.cxx
 * This source file shows a simple example of how to create a server for an interface.
 *
 * This file was generated by the tool fastrpcgen.
 */

#include "WANTestServer.h"
#include <strategies/ThreadPoolStrategy.h>
#include "WANTestDDSProtocol.h"
#include <transports/dds/TCPServerTransport.h>
#include <exceptions/Exceptions.h>
#include <utils/Utilities.h>
#include "WANTestServerImplExample.h"

#include <iostream>

using namespace eprosima::rpc;
using namespace ::exception;
using namespace ::strategy;
using namespace ::transport::dds;
using namespace ::protocol::dds;

int main(int argc, char **argv)
{
    unsigned int threadPoolSize = 5;
    ThreadPoolStrategy *pool = NULL;
    WANTestProtocol *protocol = NULL;
    TCPServerTransport *transport = NULL;
    WANTestServer *server = NULL;
    WANTestServerImplExample servant;
    
    // Create and initialize the server for interface "WANTest".
    try
    {
        pool = new ThreadPoolStrategy(threadPoolSize);
        protocol = new WANTestProtocol();
        transport = new TCPServerTransport("127.0.0.1:7600", "7600", "WANTestService", "Instance");
        server = new WANTestServer(*pool, *transport, *protocol, servant);
        server->serve();
    }
    catch(InitializeException &ex)
    {
        std::cout << ex.what() << std::endl;
        return -1;
    }
    
    while(1)
    {
        eprosima::rpc::sleep(10000);
    }
    
    // Stop and delete the server.
    server->stop();
    delete server;
    delete protocol;
    delete transport;
    delete pool;
    
    return 0;
}




































