/*************************************************************************
 * Copyright (c) 2012 eProsima. All rights reserved.
 *
 * This copy of FASTRPC is licensed to you under the terms described in the
 * FASTRPC_LICENSE file included in this distribution.
 *
 *************************************************************************
 * 
 * @file UserExceptionsServerImplExample.cxx
 * This source file contains the definition of the skeleton for all interfaces.
 *
 * This file was generated by the tool rpcddsgen.
 */

#include "UserExceptionsServerImplExample.h"

void IfcServerImplExample::sendLevel1(/*in*/ DDS_Long l1, /*inout*/ DDS_Long& l2, /*out*/ DDS_Long& l3)
{
    Level1 ex;
    ex.count = l1;
    ex.msg = strdup("sendLevel1");
    throw ex;
} 

DDS_Long IfcServerImplExample::sendLevel2()
{
    DDS_Long  sendLevel2_ret = 0;

    Alfa::Level2 ex;
    ex.count = 101;
    ex.ana.count = 102;
    ex.ana.comment = strdup("sendLevel2");
    throw ex;

    return sendLevel2_ret;
} 

DDS_Long IfcServerImplExample::sendExcep(/*in*/ DDS_Long l1)
{
    DDS_Long  sendExcep_ret = 0;

    Beta::Excep ex;
    ex.count = l1;
    ex.msg = strdup("sendExcep");
    throw ex;

    return sendExcep_ret;
} 

DDS_Long IfcServerImplExample::sendExcepIntern(/*in*/ DDS_Long l1)
{
    DDS_Long  sendExcepIntern_ret = 0;

    Beta::Ifc::ExcepIntern ex;
    ex.count = l1;
    ex.msg = strdup("sendExcepIntern");
    throw ex;

    return sendExcepIntern_ret;
} 

void IfcServerImplExample::sendOnlyExcep()
{
    Beta::Excep ex;
    ex.count = 1;
    ex.msg = strdup("sendOnlyExcep");
    throw ex;
} 
