# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.24)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS rpcdds)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target rpcdds
add_library(rpcdds STATIC IMPORTED)

set_target_properties(rpcdds PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "\$<\$<BOOL:1>:BOOST_ALL_DYN_LINK>;\$<\$<AND:\$<STREQUAL:\"rpcdds\",\"rpcdds\">,\$<BOOL:OFF>>:>"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;\$<\$<AND:\$<STREQUAL:\"rpcdds\",\"rpcdds\">,\$<BOOL:OFF>>:>"
  INTERFACE_LINK_LIBRARIES "\$<\$<OR:\$<STREQUAL:\"rpcdds\",\"fastrpc\">,\$<STREQUAL:\"rpcdds\",\"rpcdds\">>:fastcdr>;\$<\$<AND:\$<STREQUAL:\"rpcdds\",\"rpcdds\">,\$<BOOL:True>>:fastrtps>;\$<\$<AND:\$<STREQUAL:\"rpcdds\",\"rpcdds\">,\$<BOOL:OFF>>:>;C:/.conan/c47ed0/1/lib/libboost_contract.lib;C:/.conan/c47ed0/1/lib/libboost_coroutine.lib;C:/.conan/c47ed0/1/lib/libboost_fiber_numa.lib;C:/.conan/c47ed0/1/lib/libboost_fiber.lib;C:/.conan/c47ed0/1/lib/libboost_context.lib;C:/.conan/c47ed0/1/lib/libboost_graph.lib;C:/.conan/c47ed0/1/lib/libboost_iostreams.lib;C:/.conan/c47ed0/1/lib/libboost_json.lib;C:/.conan/c47ed0/1/lib/libboost_locale.lib;C:/.conan/c47ed0/1/lib/libboost_log_setup.lib;C:/.conan/c47ed0/1/lib/libboost_log.lib;C:/.conan/c47ed0/1/lib/libboost_math_c99.lib;C:/.conan/c47ed0/1/lib/libboost_math_c99f.lib;C:/.conan/c47ed0/1/lib/libboost_math_c99l.lib;C:/.conan/c47ed0/1/lib/libboost_math_tr1.lib;C:/.conan/c47ed0/1/lib/libboost_math_tr1f.lib;C:/.conan/c47ed0/1/lib/libboost_math_tr1l.lib;C:/.conan/c47ed0/1/lib/libboost_nowide.lib;C:/.conan/c47ed0/1/lib/libboost_program_options.lib;C:/.conan/c47ed0/1/lib/libboost_random.lib;C:/.conan/c47ed0/1/lib/libboost_regex.lib;C:/.conan/c47ed0/1/lib/libboost_stacktrace_noop.lib;C:/.conan/c47ed0/1/lib/libboost_stacktrace_windbg.lib;C:/.conan/c47ed0/1/lib/libboost_stacktrace_windbg_cached.lib;C:/.conan/c47ed0/1/lib/libboost_timer.lib;C:/.conan/c47ed0/1/lib/libboost_type_erasure.lib;C:/.conan/c47ed0/1/lib/libboost_thread.lib;C:/.conan/c47ed0/1/lib/libboost_chrono.lib;C:/.conan/c47ed0/1/lib/libboost_container.lib;C:/.conan/c47ed0/1/lib/libboost_date_time.lib;C:/.conan/c47ed0/1/lib/libboost_unit_test_framework.lib;C:/.conan/c47ed0/1/lib/libboost_prg_exec_monitor.lib;C:/.conan/c47ed0/1/lib/libboost_test_exec_monitor.lib;C:/.conan/c47ed0/1/lib/libboost_exception.lib;C:/.conan/c47ed0/1/lib/libboost_url.lib;C:/.conan/c47ed0/1/lib/libboost_wave.lib;C:/.conan/c47ed0/1/lib/libboost_filesystem.lib;C:/.conan/c47ed0/1/lib/libboost_atomic.lib;C:/.conan/c47ed0/1/lib/libboost_wserialization.lib;C:/.conan/c47ed0/1/lib/libboost_serialization.lib;\$<LINK_ONLY:ole32>;\$<LINK_ONLY:dbgeng>;\$<LINK_ONLY:bcrypt>;\$<LINK_ONLY:BZip2::BZip2>;\$<LINK_ONLY:ZLIB::ZLIB>"
)

if(CMAKE_VERSION VERSION_LESS 2.8.12)
  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
endif()

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/rpcdds-static-targets-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
    if(NOT EXISTS "${_cmake_file}")
      message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
