/*************************************************************************
 * Copyright (c) 2012 eProsima. All rights reserved.
 *
 * This copy of RPCDDS is licensed to you under the terms described in the
 * RPCDDS_LICENSE file included in this distribution.
 *
 *************************************************************************
 * 
 * @file Server.cxx
 * This source file shows a simple example of how to create a server for interface SimpleDelay.
 *
 * This file was generated by the tool rpcddsgen.
 */

#include "soapDefaultBinding_USCOREISimpleDelayService.h"
#include "DefaultBinding_USCOREISimpleDelay.nsmap"

#include <iostream>

int DefaultBinding_USCOREISimpleDelayService::Duplicate(_ns1__Estructura *ns1__Estructura, struct __ns1__DuplicateResponse &_param_1)
{
    _param_1.ns1__Estructura = new _ns1__Estructura();
    _param_1.ns1__Estructura->value1 = ns1__Estructura->value1;
    _param_1.ns1__Estructura->value2 = ns1__Estructura->value2;
    _param_1.ns1__Estructura->value3 = ns1__Estructura->value3;
    for(int i = 0; i < ns1__Estructura->seq.integer.size(); ++i)
        _param_1.ns1__Estructura->seq.integer.push_back(ns1__Estructura->seq.integer[i]);
    return SOAP_OK;
}

int main(int argc, char **argv)
{
    // Create and initialize the server for interface "SimpleDelay".
    DefaultBinding_USCOREISimpleDelayService server;
    while (server.run(8080) != SOAP_TCP_ERROR)
        server.soap_stream_fault(std::cerr); 

    return 0;
}


