/*************************************************************************
 * Copyright (c) 2012 eProsima. All rights reserved.
 *
 * This copy of RPCDDS is licensed to you under the terms described in the
 * RPCDDS_LICENSE file included in this distribution.
 *
 *************************************************************************
 * 
 * @file Client.cxx
 * This source file shows a simple example of how to create a proxy for interface UnionTest.
 *
 * This file was generated by the tool rpcddsgen.
 */

#include "UnionTestProxy.h"
#include "UnionTestRequestReplyTypeSupportImpl.h"
#include "exceptions/Exceptions.h"

#include <iostream>

int main(int argc, char **argv)
{
    UnionTestProxy *proxy = NULL;
    
    // Creation of the proxy for interface "UnionTest".
    try
    {
        proxy = new UnionTestProxy("UnionTestService", 0, 30000L);
    }
    catch(eProsima::RPCDDS::InitializeException &ex)
    {
        std::cout << ex.what() << std::endl;
        return -1;
    }

    // Create and initialize parameters.
    Empleado em1;
    Empleado em2;
    Empleado em3;



    // Create and initialize return value.
    Empleado getEmpleado_ret;

    em1._d(1);
    em1.id(1);
    em2._d(2);
    em2.name(strdup("PRUEBA"));

    // Call to remote procedure "getEmpleado".
    try
    {
        getEmpleado_ret = proxy->getEmpleado(em1, em2, em3);

        if(em3._d() != 2 || strcmp(em3.name(), "PRUEBA") != 0 ||
                getEmpleado_ret._d() != 1 || getEmpleado_ret.id() != 1 ||
                em2._d() != 1 || em2.id() != 1 ||
                em1._d() != 1 || em1.id() != 1)
        {
            printf("TEST FAILED<getEmpleado>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::RPCDDS::Exception &ex)
    {
        printf("TEST FAILED<getEmpleado>: %s\n", ex.what());
        _exit(-1);
    }

    printf("TEST SUCCESFULLY\n");

    delete(proxy);

    _exit(0);
    return 0;
}
