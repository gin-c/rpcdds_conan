/*************************************************************************
 * Copyright (c) 2012 eProsima. All rights reserved.
 *
 * This copy of RPCDDS is licensed to you under the terms described in the
 * RPCDDS_LICENSE file included in this distribution.
 *
 *************************************************************************
 * 
 * @file Client.cxx
 * This source file shows a simple example of how to create a proxy for interface ServerException.
 *
 * This file was generated by the tool rpcddsgen.
 */

#include "ServerExceptionProxy.h"
#include "ServerExceptionRequestReplyTypeSupportImpl.h"
#include "exceptions/Exceptions.h"

#include <iostream>

int main(int argc, char **argv)
{
    ServerExceptionProxy *proxy = NULL;
    
    // Creation of the proxy for interface "ServerException".
    try
    {
        proxy = new ServerExceptionProxy("ServerExceptionService", 0, 30000L);
    }
    catch(eProsima::RPCDDS::InitializeException &ex)
    {
        std::cout << ex.what() << std::endl;
        return -1;
    }

    // Call to remote procedure "sendException".
    try
    {
        proxy->sendException();
        printf("TEST FAILED<sendException>: No exception\n");
        _exit(-1);
    }
    catch(eProsima::RPCDDS::ServerInternalException &ex)
    {
        if(strcmp(ex.what(), "Testing exception") != 0)
        {
            printf("TEST FAILED<sendException>: Bad exception message\n");
            _exit(-1);
        }
    }
    catch(eProsima::RPCDDS::Exception &ex)
    {
        printf("TEST FAILED<sendException>: %s\n", ex.what());
        _exit(-1);
    }

    char*  s1  = strdup("PRUEBA");       
    char*  s2  = strdup("PRUEBA2");       
    char*  s3  = NULL;    
    char*  sendExceptionTwoRetValue = NULL;  

    try
    {
        sendExceptionTwoRetValue = proxy->sendExceptionTwo(s1, s2, s3);
        printf("TEST FAILED<sendExceptionTwo>: No exception\n");
        _exit(-1);
    }
    catch(eProsima::RPCDDS::ServerInternalException &ex)
    {
        if(strcmp(ex.what(), "Testing exception") != 0)
        {
            printf("TEST FAILED<sendExceptionTwo>: Bad exception message\n");
            _exit(-1);
        }
    }
    catch(eProsima::RPCDDS::Exception &ex)
    {
        printf("TEST FAILED<sendExceptionTwo>: %s\n", ex.what());
        _exit(-1);
    }

    Estructura es1;
    Estructura es2;
    Estructura es3;
    Estructura sendExceptionThreeRetValue;

    try
    {
        sendExceptionThreeRetValue = proxy->sendExceptionThree(es1, es2, es3);
        printf("TEST FAILED<sendExceptionThree>: No exception\n");
        _exit(-1);
    }
    catch(eProsima::RPCDDS::ServerInternalException &ex)
    {
        if(strcmp(ex.what(), "Testing exception") != 0)
        {
            printf("TEST FAILED<sendExceptionThree>: Bad exception message\n");
            _exit(-1);
        }
    }
    catch(eProsima::RPCDDS::Exception &ex)
    {
        printf("TEST FAILED<sendExceptionThree>: %s\n", ex.what());
        _exit(-1);
    }

    printf("TEST SUCCESFULLY\n");
    
    delete(proxy);

    _exit(0);
   
    return 0;
}
