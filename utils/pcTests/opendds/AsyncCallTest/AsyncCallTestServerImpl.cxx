/*************************************************************************
 * Copyright (c) 2012 eProsima. All rights reserved.
 *
 * This copy of RPCDDS is licensed to you under the terms described in the
 * RPCDDS_LICENSE file included in this distribution.
 *
 *************************************************************************
 * 
 * @file AsyncCallTestServerImpl.cxx
 * This source file contains the definition of the skeleton for interface AsyncCallTest. This definitions have to be implemented.
 *
 * This file was generated by the tool rpcddsgen.
 */
 
#include "AsyncCallTestServerImpl.h"

 
CORBA::Long AsyncCallTestServerImpl::getLong(/*in*/ CORBA::Long lo1, /*inout*/ CORBA::Long& lo2, /*out*/ CORBA::Long& lo3) 
{
    CORBA::Long  getLong_ret = 0;

    lo3 = lo2;
    getLong_ret = lo1;
    lo2 = lo1 + lo2;
   
    return getLong_ret;
} 
 
CORBA::Boolean AsyncCallTestServerImpl::getBoolean(/*in*/ CORBA::Boolean bo1, /*inout*/ CORBA::Boolean& bo2, /*out*/ CORBA::Boolean& bo3) 
{
    CORBA::Boolean  getBoolean_ret = false;

    bo3 = bo2;
    getBoolean_ret = bo1;
    bo2 = bo1 | bo2;
   
    return getBoolean_ret;
} 
 
char* AsyncCallTestServerImpl::getString(/*in*/ char* s1, /*inout*/ char*& s2, /*out*/ char*& s3) 
{
    char*  getString_ret = NULL;

    s3 = strdup(s2);
    getString_ret = strdup(s1);
    free(s2);
    s2 = (char*)malloc(strlen(s1) + strlen(s3) + 1);
#if (defined(RTI_WIN32) || defined(OPENDDS_WIN32))
    _snprintf(s2, strlen(s1) + strlen(s3) + 1, "%s%s", s1, s3);
#elif (defined(RTI_LINUX)|| defined(OPENDDS_LINUX))
    snprintf(s2, strlen(s1) + strlen(s3) + 1, "%s%s", s1, s3);
#endif
   
    return getString_ret;
} 
 
Structure AsyncCallTestServerImpl::duplicate(/*in*/ const Structure& ev) 
{
    Structure duplicate_ret;

	duplicate_ret.dato = ev.dato;
	duplicate_ret.message = strdup(ev.message);
   
    return duplicate_ret;
} 
