/*************************************************************************
 * Copyright (c) 2012 eProsima. All rights reserved.
 *
 * This copy of RPCDDS is licensed to you under the terms described in the
 * RPCDDS_LICENSE file included in this distribution.
 *
 *************************************************************************
 * 
 * @file EnumYStringTestServerImpl.cxx
 * This source file contains the definition of the skeleton for interface EnumYStringTest. This definitions have to be implemented.
 *
 * This file was generated by the tool rpcddsgen.
 */
 
#include "EnumYStringTestServerImpl.h"

 
Valores EnumYStringTestServerImpl::getEnum(/*in*/ Valores v1, /*inout*/ Valores& v2, /*out*/ Valores& v3) 
{
    Valores  getEnum_ret = VALOR1;

    v3 = v2;
    getEnum_ret = v1;
    v2 = v1;
   
    return getEnum_ret;
} 
 
char* EnumYStringTestServerImpl::getString(/*in*/ char* s1, /*inout*/ char*& s2, /*out*/ char*& s3) 
{
    char*  getString_ret = NULL;

    s3 = strdup(s2);
    getString_ret = strdup(s1);
    free(s2);
    s2 = (char*)malloc(strlen(s1) + strlen(s3) + 1);
#if (defined(RTI_WIN32) || defined(OPENDDS_WIN32))
    _snprintf(s2, strlen(s1) + strlen(s3) + 1, "%s%s", s1, s3);
#elif (defined(RTI_LINUX) || defined(OPENDDS_LINUX))
    snprintf(s2, strlen(s1) + strlen(s3) + 1, "%s%s", s1, s3);
#endif
   
    return getString_ret;
} 
 
char* EnumYStringTestServerImpl::getStringBounded(/*in*/ char* sb1, /*inout*/ char*& sb2, /*out*/ char*& sb3) 
{
    char*  getStringBounded_ret = NULL;

    sb3 = strdup(sb2);
    getStringBounded_ret = strdup(sb1);
    free(sb2);
    sb2 = (char*)malloc(strlen(sb1) + strlen(sb3) + 1);
#if (defined(RTI_WIN32) || defined(OPENDDS_WIN32))
    _snprintf(sb2, strlen(sb1) + strlen(sb3) + 1, "%s%s", sb1, sb3);
#elif (defined(RTI_LINUX) || defined(OPENDDS_LINUX))
    snprintf(sb2, strlen(sb1) + strlen(sb3) + 1, "%s%s", sb1, sb3);
#endif
   
    return getStringBounded_ret;
} 
