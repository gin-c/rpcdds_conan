/*************************************************************************
 * Copyright (c) 2012 eProsima. All rights reserved.
 *
 * This copy of RPCDDS is licensed to you under the terms described in the
 * RPCDDS_LICENSE file included in this distribution.
 *
 *************************************************************************
 * 
 * @file BasicTypeTestServerImpl.cxx
 * This source file contains the definition of the skeleton for interface BasicTypeTest. This definitions have to be implemented.
 *
 * This file was generated by the tool rpcddsgen.
 */
 
#include "BasicTypeTestServerImpl.h"

 
CORBA::Octet BasicTypeTestServerImpl::getOctet(/*in*/ CORBA::Octet oc1, /*inout*/ CORBA::Octet& oc2, /*out*/ CORBA::Octet& oc3) 
{
    CORBA::Octet  getOctet_ret = 0;

    oc3 = oc2;
    getOctet_ret = oc1;
    oc2 = oc1 + oc2;
   
    return getOctet_ret;
} 
 
CORBA::Char BasicTypeTestServerImpl::getChar(/*in*/ CORBA::Char ch1, /*inout*/ CORBA::Char& ch2, /*out*/ CORBA::Char& ch3) 
{
    CORBA::Char  getChar_ret = 0;

    ch3 = ch2;
    getChar_ret= ch1;
    ch2 = ch1 + ch2;
   
    return getChar_ret;
} 
 
CORBA::WChar BasicTypeTestServerImpl::getWChar(/*in*/ CORBA::WChar wch1, /*inout*/ CORBA::WChar& wch2, /*out*/ CORBA::WChar& wch3) 
{
    CORBA::WChar  getWChar_ret = 0;

    wch3 = wch2;
    getWChar_ret = wch1;
    wch2 = wch1 + wch2;
   
    return getWChar_ret;
} 
 
CORBA::Short BasicTypeTestServerImpl::getShort(/*in*/ CORBA::Short sh1, /*inout*/ CORBA::Short& sh2, /*out*/ CORBA::Short& sh3) 
{
    CORBA::Short  getShort_ret = 0;

    sh3 = sh2;
    getShort_ret = sh1;
    sh2 = sh1 + sh2;
   
    return getShort_ret;
} 
 
CORBA::UShort BasicTypeTestServerImpl::getUShort(/*in*/ CORBA::UShort ush1, /*inout*/ CORBA::UShort& ush2, /*out*/ CORBA::UShort& ush3) 
{
    CORBA::UShort  getUShort_ret = 0;

    ush3 = ush2;
    getUShort_ret = ush1;
    ush2 = ush1 + ush2;
   
    return getUShort_ret;
} 
 
CORBA::Long BasicTypeTestServerImpl::getLong(/*in*/ CORBA::Long lo1, /*inout*/ CORBA::Long& lo2, /*out*/ CORBA::Long& lo3) 
{
    CORBA::Long  getLong_ret = 0;

    lo3 = lo2;
    getLong_ret = lo1;
    lo2 = lo1 + lo2;
   
    return getLong_ret;
} 
 
CORBA::ULong BasicTypeTestServerImpl::getULong(/*in*/ CORBA::ULong ulo1, /*inout*/ CORBA::ULong& ulo2, /*out*/ CORBA::ULong& ulo3) 
{
    CORBA::ULong  getULong_ret = 0;
    ulo3 = ulo2;
    getULong_ret = ulo1;
    ulo2 = ulo1 + ulo2;
   
    return getULong_ret;
} 
 
CORBA::LongLong BasicTypeTestServerImpl::getLLong(/*in*/ CORBA::LongLong llo1, /*inout*/ CORBA::LongLong& llo2, /*out*/ CORBA::LongLong& llo3) 
{
    CORBA::LongLong  getLLong_ret = 0;

    llo3 = llo2;
    getLLong_ret = llo1;
    llo2 = llo1 + llo2;
   
    return getLLong_ret;
} 
 
CORBA::ULongLong BasicTypeTestServerImpl::getULLong(/*in*/ CORBA::ULongLong ullo1, /*inout*/ CORBA::ULongLong& ullo2, /*out*/ CORBA::ULongLong& ullo3) 
{
    CORBA::ULongLong  getULLong_ret = 0;

    ullo3 = ullo2;
    getULLong_ret = ullo1;
    ullo2 = ullo1 + ullo2;
   
    return getULLong_ret;
} 
 
CORBA::Float BasicTypeTestServerImpl::getFloat(/*in*/ CORBA::Float fl1, /*inout*/ CORBA::Float& fl2, /*out*/ CORBA::Float& fl3) 
{
    CORBA::Float  getFloat_ret = 0;

    fl3 = fl2;
    getFloat_ret = fl1;
    fl2 = fl1 + fl2;
   
    return getFloat_ret;
} 
 
CORBA::Double BasicTypeTestServerImpl::getDouble(/*in*/ CORBA::Double do1, /*inout*/ CORBA::Double& do2, /*out*/ CORBA::Double& do3) 
{
    CORBA::Double  getDouble_ret = 0;

    do3 = do2;
    getDouble_ret = do1;
    do2 = do1 + do2;
   
    return getDouble_ret;
} 
 
CORBA::Boolean BasicTypeTestServerImpl::getBoolean(/*in*/ CORBA::Boolean bo1, /*inout*/ CORBA::Boolean& bo2, /*out*/ CORBA::Boolean& bo3) 
{
    CORBA::Boolean  getBoolean_ret = false;

    bo3 = bo2;
    getBoolean_ret = bo1;
    bo2 = bo1 | bo2;
   
    return getBoolean_ret;
} 
