/*************************************************************************
 * Copyright (c) 2012 eProsima. All rights reserved.
 *
 * This copy of FASTRPC is licensed to you under the terms described in the
 * FASTRPC_LICENSE file included in this distribution.
 *
 *************************************************************************
 * 
 * @file BasicTypeTestServerImplExample.cxx
 * This source file contains the definition of the skeleton for all interfaces.
 *
 * This file was generated by the tool rpcddsgen.
 */

#include "BasicTypeTestServerImplExample.h"

uint8_t BasicTypeTestServerImplExample::getOctet(/*in*/ uint8_t oc1, /*inout*/ uint8_t& oc2, /*out*/ uint8_t& oc3) 
{
    uint8_t returnedValue;
        
    oc3 = oc2;
    returnedValue = oc1;
    oc2 = oc1 + oc2;
   
    return returnedValue;
} 
 
char BasicTypeTestServerImplExample::getChar(/*in*/ char ch1, /*inout*/ char& ch2, /*out*/ char& ch3) 
{
    char returnedValue;
        
    ch3 = ch2;
    returnedValue = ch1;
    ch2 = ch1 + ch2;
   
    return returnedValue;
} 
 
wchar_t BasicTypeTestServerImplExample::getWChar(/*in*/ wchar_t wch1, /*inout*/ wchar_t& wch2, /*out*/ wchar_t& wch3) 
{
    wchar_t returnedValue;
        
    wch3 = wch2;
    returnedValue = wch1;
    wch2 = wch1 + wch2;
   
    return returnedValue;
} 
 
int16_t BasicTypeTestServerImplExample::getShort(/*in*/ int16_t sh1, /*inout*/ int16_t& sh2, /*out*/ int16_t& sh3) 
{
    int16_t returnedValue;
        
    sh3 = sh2;
    returnedValue = sh1;
    sh2 = sh1 + sh2;
   
    return returnedValue;
} 
 
uint16_t BasicTypeTestServerImplExample::getUShort(/*in*/ uint16_t ush1, /*inout*/ uint16_t& ush2, /*out*/ uint16_t& ush3) 
{
    uint16_t returnedValue;
        
    ush3 = ush2;
    returnedValue = ush1;
    ush2 = ush1 + ush2;
   
    return returnedValue;
} 
 
int32_t BasicTypeTestServerImplExample::getLong(/*in*/ int32_t lo1, /*inout*/ int32_t& lo2, /*out*/ int32_t& lo3) 
{
    int32_t returnedValue;
        
    lo3 = lo2;
    returnedValue = lo1;
    lo2 = lo1 + lo2;
   
    return returnedValue;
} 
 
uint32_t BasicTypeTestServerImplExample::getULong(/*in*/ uint32_t ulo1, /*inout*/ uint32_t& ulo2, /*out*/ uint32_t& ulo3) 
{
    uint32_t returnedValue;
        
    ulo3 = ulo2;
    returnedValue = ulo1;
    ulo2 = ulo1 + ulo2;
   
    return returnedValue;
} 
 
int64_t BasicTypeTestServerImplExample::getLLong(/*in*/ int64_t llo1, /*inout*/ int64_t& llo2, /*out*/ int64_t& llo3) 
{
    int64_t returnedValue;
        
    llo3 = llo2;
    returnedValue = llo1;
    llo2 = llo1 + llo2;
   
    return returnedValue;
} 
 
uint64_t BasicTypeTestServerImplExample::getULLong(/*in*/ uint64_t ullo1, /*inout*/ uint64_t& ullo2, /*out*/ uint64_t& ullo3) 
{
    uint64_t returnedValue;
        
    ullo3 = ullo2;
    returnedValue = ullo1;
    ullo2 = ullo1 + ullo2;
   
    return returnedValue;
} 
 
float BasicTypeTestServerImplExample::getFloat(/*in*/ float fl1, /*inout*/ float& fl2, /*out*/ float& fl3) 
{
    float returnedValue;
        
    fl3 = fl2;
    returnedValue = fl1;
    fl2 = fl1 + fl2;
   
    return returnedValue;
} 
 
double BasicTypeTestServerImplExample::getDouble(/*in*/ double do1, /*inout*/ double& do2, /*out*/ double& do3) 
{
    double returnedValue;
        
    do3 = do2;
    returnedValue = do1;
    do2 = do1 + do2;
   
    return returnedValue;
} 
 
bool BasicTypeTestServerImplExample::getBoolean(/*in*/ bool bo1, /*inout*/ bool& bo2, /*out*/ bool& bo3) 
{
    bool returnedValue;
        
    bo3 = bo2;
    returnedValue = bo1;
    bo2 = bo1 | bo2;
   
    return returnedValue;
} 
