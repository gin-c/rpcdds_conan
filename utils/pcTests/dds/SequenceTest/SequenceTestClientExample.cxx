/*************************************************************************
 * Copyright (c) 2012 eProsima. All rights reserved.
 *
 * This copy of FASTRPC is licensed to you under the terms described in the
 * FASTRPC_LICENSE file included in this distribution.
 *
 *************************************************************************
 * 
 * @file SequenceTestClientExample.cxx
 * This source file shows a simple example of how to create a proxy for an interface.
 *
 * This file was generated by the tool rpcddsgen.
 */

#include "SequenceTestProxy.h"
#include "SequenceTest.h"
#include "SequenceTestDDSProtocol.h"
#include "fastrpc/transports/dds/UDPProxyTransport.h"
#include "fastrpc/exceptions/Exceptions.h"

#include <iostream>
#ifdef __linux
#include <unistd.h>
#endif

using namespace eprosima::rpc;
using namespace ::exception;
using namespace ::transport::dds;
using namespace ::protocol::dds;

int main(int argc, char **argv)
{
    SequenceTestProtocol *protocol = NULL;
    UDPProxyTransport *transport = NULL;
    SequenceTestProxy *proxy = NULL;

    // Creation of the proxy for interface "SequenceTest".
    try
    {
        protocol = new SequenceTestProtocol();
        transport = new UDPProxyTransport("SequenceTestService", "Instance");
        proxy = new SequenceTestProxy(*transport, *protocol);
    }
    catch(InitializeException &ex)
    {
        std::cout << ex.what() << std::endl;
        return -1;
    }

    largo l1;
    largo l2;
    largo l3;
    largo getSeqLong_ret;

    l1.push_back(1);
    l1.push_back(2);
    l2.push_back(3);
    l2.push_back(4);

    try
    {
        getSeqLong_ret = proxy->getSeqLong(l1, l2, l3);

        if(l3.size() != 2 || l3[0] != 3 || l3[1] != 4 ||
                getSeqLong_ret.size() != 2 || getSeqLong_ret[0] != 1 || getSeqLong_ret[1] != 2 ||
                l2.size() != 2 || l2[0] != 4 || l2[1] != 6 ||
                l1.size() != 2 || l1[0] != 1 || l1[1] != 2)
        {
            std::cout << "TEST FAILED<getSeqLong>: Wrong values " << std::endl;
            _exit(-1);
        }
    }
    catch(SystemException &ex)
    {
        std::cout << "TEST FAILED<getSeqLong>: " << ex.what() << std::endl;
        _exit(-1);
    }

    cadena s1;
    cadena s2;
    cadena s3;
    cadena getSeqString_ret;

    s1.push_back("PRUEBA");
    s1.push_back("PRUEBA2");
    s2.push_back("PRUEBA3");
    s2.push_back("PRUEBA4");

    try
    {
        getSeqString_ret = proxy->getSeqString(s1, s2, s3);

        if(s3.size() != 2 || s3[0].compare("PRUEBA3")  != 0 || s3[1].compare("PRUEBA4")  != 0 ||
                getSeqString_ret.size() != 2 || getSeqString_ret[0].compare("PRUEBA")  != 0  || getSeqString_ret[1].compare("PRUEBA2")  != 0 ||
                s2.size() != 2 || s2[0].compare("PRUEBA")  != 0  || s2[1].compare("PRUEBA2")  != 0 ||
                s1.size() != 2 || s1[0].compare("PRUEBA")  != 0  || s1[1].compare("PRUEBA2")  != 0)
        {
            std::cout << "TEST FAILED<getSeqString>: Wrong values" << std::endl;
            _exit(-1);
        }
    }
    catch(SystemException &ex)
    {
        std::cout << "TEST FAILED<getSeqString>: " << ex.what() << std::endl;
        _exit(-1);
    }

    dattos sb1;       
    dattos sb2;       
    dattos sb3;    
    dattos getSeqDatos_ret;

    Datos data;
    data.count(1);
    data.message("PRUEBA");
    sb1.push_back(data);
    data.count(2);
    data.message("PRUEBA2");
    sb1.push_back(data);
    data.count(3);
    data.message("PRUEBA3");
    sb2.push_back(data);
    data.count(4);
    data.message("PRUEBA4");
    sb2.push_back(data);

    try
    {
        getSeqDatos_ret = proxy->getSeqDatos(sb1, sb2, sb3);

        if(sb3.size() != 2 || sb3[0].count() != 3 || sb3[0].message().compare("PRUEBA3") != 0 || sb3[1].count() != 4 || sb3[1].message().compare("PRUEBA4")  != 0 ||
                getSeqDatos_ret.size() != 2 || getSeqDatos_ret[0].count() != 1 || getSeqDatos_ret[0].message().compare("PRUEBA")  != 0  ||
                getSeqDatos_ret[1].count() != 2 || getSeqDatos_ret[1].message().compare("PRUEBA2")  != 0 ||
                sb2.size() != 2 || sb2[0].count() != 1 || sb2[0].message().compare("PRUEBA")  != 0  || sb2[1].count() != 2 || sb2[1].message().compare("PRUEBA2")  != 0 ||
                sb1.size() != 2 || sb1[0].count() != 1 || sb1[0].message().compare("PRUEBA")  != 0  || sb1[1].count() != 2 || sb1[1].message().compare("PRUEBA2")  != 0)
        {
            std::cout << "TEST FAILED<getSeqDatos>: Wrong values" << std::endl;
            _exit(-1);
        }
    }
    catch(SystemException &ex)
    {
        std::cout << "TEST FAILED<getSeqDatos>: " << ex.what() << std::endl;
        _exit(-1);
    }

    seqseq ss1(2);
    ss1[0].resize(2);
    ss1[0][0] = 1;
    ss1[0][1] = 2;
    ss1[1].resize(2);
    ss1[1][0] = 3;
    ss1[1][1] = 4;
    seqseq ss2(2);
    ss2[0].resize(2);
    ss2[0][0] = 5;
    ss2[0][1] = 6;
    ss2[1].resize(2);
    ss2[1][0] = 7;
    ss2[1][1] = 8;
    seqseq ss3;
    seqseq getSeqSeq_ret;

    try
    {
        getSeqSeq_ret = proxy->getSeqSeq(ss1, ss2, ss3);

        if(ss3.size() != 2 || ss3[0].size() != 2 || ss3[0][0] != 5 || ss3[0][1] != 6 || ss3[1].size() != 2 || ss3[1][0]  != 7 || ss3[1][1] != 8 ||
                getSeqSeq_ret.size() != 2 || getSeqSeq_ret[0].size() != 2 || getSeqSeq_ret[0][0] != 1  || getSeqSeq_ret[0][1] != 2 ||
                getSeqSeq_ret[1].size() != 2 || getSeqSeq_ret[1][0] != 3 || getSeqSeq_ret[1][1] != 4 ||
                ss2.size() != 2 || ss2[0].size() != 2 || ss2[0][0] != 1  || ss2[0][1] != 2 || ss2[1].size()  != 2 || ss2[1][0] != 3 || ss2[1][1] != 4 ||
                ss1.size() != 2 || ss1[0].size() != 2 || ss1[0][0] != 1  || ss1[0][1] != 2 || ss1[1].size()  != 2 || ss1[1][0] != 3 || ss1[1][1] != 4)
        {
            std::cout << "TEST FAILED<getSeqSeq>: Wrong values" << std::endl;
            _exit(-1);
        }
    }
    catch(SystemException &ex)
    {
        std::cout << "TEST FAILED<getSeqSeq>: " << ex.what() << std::endl;
        _exit(-1);
    }

    seqdat sd1(2);
    sd1[0].resize(2);
    sd1[0][0].count(1);
    sd1[0][0].message("PRUEBA1");
    sd1[0][1].count(2);
    sd1[0][1].message("PRUEBA2");
    sd1[1].resize(2);
    sd1[1][0].count(3);
    sd1[1][0].message("PRUEBA3");
    sd1[1][1].count(4);
    sd1[1][1].message("PRUEBA4");
    seqdat sd2(2);
    sd2[0].resize(2);
    sd2[0][0].count(5);
    sd2[0][0].message("PRUEBA5");
    sd2[0][1].count(6);
    sd2[0][1].message("PRUEBA6");
    sd2[1].resize(2);
    sd2[1][0].count(7);
    sd2[1][0].message("PRUEBA7");
    sd2[1][1].count(8);
    sd2[1][1].message("PRUEBA8");
    seqdat sd3;
    seqdat getSeqDat_ret;

    try
    {
        getSeqDat_ret = proxy->getSeqDat(sd1, sd2, sd3);

        if(sd3.size() != 2 || sd3[0].size() != 2 || sd3[0][0].count() != 5 || sd3[0][0].message().compare("PRUEBA5") != 0 ||
                sd3[0][1].count() != 6 || sd3[0][1].message().compare("PRUEBA6") ||
                sd3[1].size() != 2 || sd3[1][0].count()  != 7 || sd3[1][0].message().compare("PRUEBA7") ||
                sd3[1][1].count() != 8 || sd3[1][1].message().compare("PRUEBA8") ||
                getSeqDat_ret.size() != 2 || getSeqDat_ret[0].size() != 2 || getSeqDat_ret[0][0].count() != 1  || getSeqDat_ret[0][0].message().compare("PRUEBA1") ||
                getSeqDat_ret[0][1].count() != 2 || getSeqDat_ret[0][1].message().compare("PRUEBA2") ||
                getSeqDat_ret[1].size() != 2 || getSeqDat_ret[1][0].count() != 3 || getSeqDat_ret[1][0].message().compare("PRUEBA3") ||
                getSeqDat_ret[1][1].count() != 4 || getSeqDat_ret[1][1].message().compare("PRUEBA4") ||
                sd2.size() != 2 || sd2[0].size() != 2 || sd2[0][0].count() != 1  || sd2[0][0].message().compare("PRUEBA1") ||
                sd2[0][1].count() != 2 || sd2[0][1].message().compare("PRUEBA2") ||
                sd2[1].size() != 2 || sd2[1][0].count() != 3 || sd2[1][0].message().compare("PRUEBA3") ||
                sd2[1][1].count() != 4 || sd2[1][1].message().compare("PRUEBA4") ||
                sd1.size() != 2 || sd1[0].size() != 2 || sd1[0][0].count() != 1  || sd1[0][0].message().compare("PRUEBA1") ||
                sd1[0][1].count() != 2 || sd1[0][1].message().compare("PRUEBA2") ||
                sd1[1].size() != 2 || sd1[1][0].count() != 3 || sd1[1][0].message().compare("PRUEBA3") ||
                sd1[1][1].count() != 4 || sd1[1][1].message().compare("PRUEBA4"))
        {
            std::cout << "TEST FAILED<getSeqDat>: Wrong values" << std::endl;
            _exit(-1);
        }
    }
    catch(SystemException &ex)
    {
        std::cout << "TEST FAILED<getSeqDat>: " << ex.what() << std::endl;
        _exit(-1);
    }

    SequenceTest::Sequences seq1;
    seq1.strings().push_back("PRUEBA1");
    seq1.strings().push_back("PRUEBA2");
    seq1.datos().resize(2);
    seq1.datos()[0].count(1);
    seq1.datos()[0].message("PRUEBA1");
    seq1.datos()[1].count(2);
    seq1.datos()[1].message("PRUEBA2");
    seq1.seqseq().resize(2);
    seq1.seqseq()[0].resize(2);
    seq1.seqseq()[0][0] = 1;
    seq1.seqseq()[0][1] = 2;
    seq1.seqseq()[1].resize(2);
    seq1.seqseq()[1][0] = 3;
    seq1.seqseq()[1][1] = 4;
    seq1.seqdat().resize(2);
    seq1.seqdat()[0].resize(2);
    seq1.seqdat()[0][0].count(1);
    seq1.seqdat()[0][0].message("PRUEBA1");
    seq1.seqdat()[0][1].count(2);
    seq1.seqdat()[0][1].message("PRUEBA2");
    seq1.seqdat()[1].resize(2);
    seq1.seqdat()[1][0].count(3);
    seq1.seqdat()[1][0].message("PRUEBA3");
    seq1.seqdat()[1][1].count(4);
    seq1.seqdat()[1][1].message("PRUEBA4");
    SequenceTest::Sequences seq2;
    seq2.strings().push_back("PRUEBA5");
    seq2.strings().push_back("PRUEBA6");
    seq2.datos().resize(2);
    seq2.datos()[0].count(5);
    seq2.datos()[0].message("PRUEBA5");
    seq2.datos()[1].count(6);
    seq2.datos()[1].message("PRUEBA6");
    seq2.seqseq().resize(2);
    seq2.seqseq()[0].resize(2);
    seq2.seqseq()[0][0] = 5;
    seq2.seqseq()[0][1] = 6;
    seq2.seqseq()[1].resize(2);
    seq2.seqseq()[1][0] = 7;
    seq2.seqseq()[1][1] = 8;
    seq2.seqdat().resize(2);
    seq2.seqdat()[0].resize(2);
    seq2.seqdat()[0][0].count(5);
    seq2.seqdat()[0][0].message("PRUEBA5");
    seq2.seqdat()[0][1].count(6);
    seq2.seqdat()[0][1].message("PRUEBA6");
    seq2.seqdat()[1].resize(2);
    seq2.seqdat()[1][0].count(7);
    seq2.seqdat()[1][0].message("PRUEBA7");
    seq2.seqdat()[1][1].count(8);
    seq2.seqdat()[1][1].message("PRUEBA8");
    SequenceTest::Sequences seq3;
    SequenceTest::Sequences getSequences_ret;

    try
    {
        getSequences_ret = proxy->getSequences(seq1, seq2, seq3);

        if(seq3.strings().size() != 2 || seq3.strings()[0].compare("PRUEBA5") || seq3.strings()[1].compare("PRUEBA6") ||
                seq3.datos().size() != 2 || seq3.datos()[0].count() != 5 || seq3.datos()[0].message().compare("PRUEBA5") ||
                seq3.datos()[1].count() != 6 || seq3.datos()[1].message().compare("PRUEBA6") ||
                seq3.seqseq().size() != 2 || seq3.seqseq()[0].size() != 2 || seq3.seqseq()[0][0] != 5 || seq3.seqseq()[0][1] != 6 ||
                seq3.seqseq()[1].size() != 2 || seq3.seqseq()[1][0] != 7 || seq3.seqseq()[1][1] != 8 ||
                seq3.seqdat().size() != 2 || seq3.seqdat()[0].size() != 2 || seq3.seqdat()[0][0].count() != 5 || seq3.seqdat()[0][0].message().compare("PRUEBA5") ||
                seq3.seqdat()[0][1].count() != 6 || seq3.seqdat()[0][1].message().compare("PRUEBA6") ||
                seq3.seqdat()[1].size() != 2 || seq3.seqdat()[1][0].count() != 7 || seq3.seqdat()[1][0].message().compare("PRUEBA7") ||
                seq3.seqdat()[1][1].count() != 8 || seq3.seqdat()[1][1].message().compare("PRUEBA8") ||
                getSequences_ret.strings().size() != 2 || getSequences_ret.strings()[0].compare("PRUEBA1") || getSequences_ret.strings()[1].compare("PRUEBA2") ||
                getSequences_ret.datos().size() != 2 || getSequences_ret.datos()[0].count() != 1 || getSequences_ret.datos()[0].message().compare("PRUEBA1") ||
                getSequences_ret.datos()[1].count() != 2 || getSequences_ret.datos()[1].message().compare("PRUEBA2") ||
                getSequences_ret.seqseq().size() != 2 || getSequences_ret.seqseq()[0].size() != 2 || getSequences_ret.seqseq()[0][0] != 1 || getSequences_ret.seqseq()[0][1] != 2 ||
                getSequences_ret.seqseq()[1].size() != 2 || getSequences_ret.seqseq()[1][0] != 3 || getSequences_ret.seqseq()[1][1] != 4 ||
                getSequences_ret.seqdat().size() != 2 || getSequences_ret.seqdat()[0].size() != 2 ||
                getSequences_ret.seqdat()[0][0].count() != 1 || getSequences_ret.seqdat()[0][0].message().compare("PRUEBA1") ||
                getSequences_ret.seqdat()[0][1].count() != 2 || getSequences_ret.seqdat()[0][1].message().compare("PRUEBA2") ||
                getSequences_ret.seqdat()[1].size() != 2 || getSequences_ret.seqdat()[1][0].count() != 3 || getSequences_ret.seqdat()[1][0].message().compare("PRUEBA3") ||
                getSequences_ret.seqdat()[1][1].count() != 4 || getSequences_ret.seqdat()[1][1].message().compare("PRUEBA4") ||
                seq2.strings().size() != 2 || seq2.strings()[0].compare("PRUEBA1") || seq2.strings()[1].compare("PRUEBA2") ||
                seq2.datos().size() != 2 || seq2.datos()[0].count() != 1 || seq2.datos()[0].message().compare("PRUEBA1") ||
                seq2.datos()[1].count() != 2 || seq2.datos()[1].message().compare("PRUEBA2") ||
                seq2.seqseq().size() != 2 || seq2.seqseq()[0].size() != 2 || seq2.seqseq()[0][0] != 1 || seq2.seqseq()[0][1] != 2 ||
                seq2.seqseq()[1].size() != 2 || seq2.seqseq()[1][0] != 3 || seq2.seqseq()[1][1] != 4 ||
                seq2.seqdat().size() != 2 || seq2.seqdat()[0].size() != 2 ||
                seq2.seqdat()[0][0].count() != 1 || seq2.seqdat()[0][0].message().compare("PRUEBA1") ||
                seq2.seqdat()[0][1].count() != 2 || seq2.seqdat()[0][1].message().compare("PRUEBA2") ||
                seq2.seqdat()[1].size() != 2 || seq2.seqdat()[1][0].count() != 3 || seq2.seqdat()[1][0].message().compare("PRUEBA3") ||
                seq2.seqdat()[1][1].count() != 4 || seq2.seqdat()[1][1].message().compare("PRUEBA4") ||
                seq1.strings().size() != 2 || seq1.strings()[0].compare("PRUEBA1") || seq1.strings()[1].compare("PRUEBA2") ||
                seq1.datos().size() != 2 || seq1.datos()[0].count() != 1 || seq1.datos()[0].message().compare("PRUEBA1") ||
                seq1.datos()[1].count() != 2 || seq1.datos()[1].message().compare("PRUEBA2") ||
                seq1.seqseq().size() != 2 || seq1.seqseq()[0].size() != 2 || seq1.seqseq()[0][0] != 1 || seq1.seqseq()[0][1] != 2 ||
                seq1.seqseq()[1].size() != 2 || seq1.seqseq()[1][0] != 3 || seq1.seqseq()[1][1] != 4 ||
                seq1.seqdat().size() != 2 || seq1.seqdat()[0].size() != 2 ||
                seq1.seqdat()[0][0].count() != 1 || seq1.seqdat()[0][0].message().compare("PRUEBA1") ||
                seq1.seqdat()[0][1].count() != 2 || seq1.seqdat()[0][1].message().compare("PRUEBA2") ||
                seq1.seqdat()[1].size() != 2 || seq1.seqdat()[1][0].count() != 3 || seq1.seqdat()[1][0].message().compare("PRUEBA3") ||
                seq1.seqdat()[1][1].count() != 4 || seq1.seqdat()[1][1].message().compare("PRUEBA4"))
        {
            std::cout << "TEST FAILED<getSequences>: Wrong values" << std::endl;
            _exit(-1);
        }
    }
    catch(SystemException &ex)
    {
        std::cout << "TEST FAILED<getSequences>: " << ex.what() << std::endl;
        _exit(-1);
    }

    larray lar1;
    larray lar2;
    larray lar3;
    larray getArrLong_ret;

    lar1[0] = 1;
    lar1[1] = 2;
    lar2[0] = 3;
    lar2[1] = 4;

    try
    {
        getArrLong_ret = proxy->getArrLong(lar1, lar2, lar3);

        if(lar3[0] != 3 || lar3[1] != 4 || getArrLong_ret[0] != 1 || getArrLong_ret[1] != 2 ||
                lar2[0] != 1 || lar2[1] != 2 || lar1[0] != 1 || lar1[1] != 2)
        {
            std::cout << "TEST FAILED<getArrLong>: Wrong values" << std::endl;
            _exit(-1);
        }
    }
    catch(SystemException &ex)
    {
        std::cout << "TEST FAILED<getArrLong>: " << ex.what() << std::endl;
        _exit(-1);
    }

    sarray sar1;
    sarray sar2;
    sarray sar3;
    sarray getArrString_ret;

    sar1[0] = "PRUEBA1";
    sar1[1] = "PRUEBA2";
    sar2[0] = "PRUEBA3";
    sar2[1] = "PRUEBA4";

    try
    {
        getArrString_ret = proxy->getArrString(sar1, sar2, sar3);

        if(sar3[0].compare("PRUEBA3") != 0 || sar3[1].compare("PRUEBA4") != 0 || getArrString_ret[0].compare("PRUEBA1") != 0 || getArrString_ret[1].compare("PRUEBA2") != 0 ||
                sar2[0].compare("PRUEBA1") != 0 || sar2[1].compare("PRUEBA2") != 0 || sar1[0].compare("PRUEBA1") != 0 || sar1[1].compare("PRUEBA2") != 0)
        {
            std::cout << "TEST FAILED<getArrString>: Wrong values" << std::endl;
            _exit(-1);
        }
    }
    catch(SystemException &ex)
    {
        std::cout << "TEST FAILED<getArrString>: " << ex.what() << std::endl;
        _exit(-1);
    }

    ssarray ssar1;
    ssarray ssar2;
    ssarray ssar3;
    ssarray getArrSString_ret;

    ssar1[0][0] = "PRUEBA1";
    ssar1[0][1] = "PRUEBA2";
    ssar1[0][2] = "PRUEBA3";
    ssar1[1][0] = "PRUEBA4";
    ssar1[1][1] = "PRUEBA5";
    ssar1[1][2] = "PRUEBA6";
    ssar2[0][0] = "PRUEBA7";
    ssar2[0][1] = "PRUEBA8";
    ssar2[0][2] = "PRUEBA9";
    ssar2[1][0] = "PRUEBA10";
    ssar2[1][1] = "PRUEBA11";
    ssar2[1][2] = "PRUEBA12";

    try
    {
        getArrSString_ret = proxy->getArrSString(ssar1, ssar2, ssar3);

        if(ssar3[0][0].compare("PRUEBA7") != 0 || ssar3[0][1].compare("PRUEBA8") != 0 || ssar3[0][2].compare("PRUEBA9") != 0 ||
                ssar3[1][0].compare("PRUEBA10") != 0 || ssar3[1][1].compare("PRUEBA11") != 0 || ssar3[1][2].compare("PRUEBA12") != 0 || 
                getArrSString_ret[0][0].compare("PRUEBA1") != 0 || getArrSString_ret[0][1].compare("PRUEBA2") != 0 ||
                getArrSString_ret[0][2].compare("PRUEBA3") != 0 || getArrSString_ret[1][0].compare("PRUEBA4") != 0 ||
                getArrSString_ret[1][1].compare("PRUEBA5") != 0 || getArrSString_ret[1][2].compare("PRUEBA6") != 0 ||
                ssar2[0][0].compare("PRUEBA1") != 0 || ssar2[0][1].compare("PRUEBA2") != 0 || ssar2[0][2].compare("PRUEBA3") != 0 ||
                ssar2[1][0].compare("PRUEBA4") != 0 || ssar2[1][1].compare("PRUEBA5") != 0 || ssar2[1][2].compare("PRUEBA6") != 0 ||
                ssar1[0][0].compare("PRUEBA1") != 0 || ssar1[0][1].compare("PRUEBA2") != 0 || ssar1[0][2].compare("PRUEBA3") != 0 ||
                ssar1[1][0].compare("PRUEBA4") != 0 || ssar1[1][1].compare("PRUEBA5") != 0 || ssar1[1][2].compare("PRUEBA6") != 0)
        {
            std::cout << "TEST FAILED<getArrSString>: Wrong values" << std::endl;
            _exit(-1);
        }
    }
    catch(SystemException &ex)
    {
        std::cout << "TEST FAILED<getArrSString>: " << ex.what() << std::endl;
        _exit(-1);
    }

    darray dar1;
    darray dar2;
    darray dar3;
    darray getArrDatos_ret;

    dar1[0].count(1);
    dar1[0].message("PRUEBA1");
    dar1[1].count(2);
    dar1[1].message("PRUEBA2");
    dar2[0].count(3);
    dar2[0].message("PRUEBA3");
    dar2[1].count(4);
    dar2[1].message("PRUEBA4");

    try
    {
        getArrDatos_ret = proxy->getArrDatos(dar1, dar2, dar3);

        if(dar3[0].count() != 3 || dar3[0].message().compare("PRUEBA3") != 0 || dar3[1].count() != 4 || dar3[1].message().compare("PRUEBA4") != 0 ||
                getArrDatos_ret[0].count() != 1 || getArrDatos_ret[0].message().compare("PRUEBA1") != 0 ||
                getArrDatos_ret[1].count() != 2 || getArrDatos_ret[1].message().compare("PRUEBA2") != 0 ||
                dar2[0].count() != 1 || dar2[0].message().compare("PRUEBA1") != 0 || dar2[1].count() != 2 || dar2[1].message().compare("PRUEBA2") != 0 ||
                dar1[0].count() != 1 || dar1[0].message().compare("PRUEBA1") != 0 || dar1[1].count() != 2 || dar1[1].message().compare("PRUEBA2")!= 0 )
        {
            std::cout << "TEST FAILED<getArrDatos>: Wrong values" << std::endl;
            _exit(-1);
        }
    }
    catch(SystemException &ex)
    {
        std::cout << "TEST FAILED<getArrDatos>: " << ex.what() << std::endl;
        _exit(-1);
    }

    ddarray ddar1;
    ddarray ddar2;
    ddarray ddar3;
    ddarray getArrDDatos_ret;

    ddar1[0][0].count(1);
    ddar1[0][0].message("PRUEBA1");
    ddar1[0][1].count(2);
    ddar1[0][1].message("PRUEBA2");
    ddar1[0][2].count(3);
    ddar1[0][2].message("PRUEBA3");
    ddar1[1][0].count(4);
    ddar1[1][0].message("PRUEBA4");
    ddar1[1][1].count(5);
    ddar1[1][1].message("PRUEBA5");
    ddar1[1][2].count(6);
    ddar1[1][2].message("PRUEBA6");
    ddar2[0][0].count(7);
    ddar2[0][0].message("PRUEBA7");
    ddar2[0][1].count(8);
    ddar2[0][1].message("PRUEBA8");
    ddar2[0][2].count(9);
    ddar2[0][2].message("PRUEBA9");
    ddar2[1][0].count(10);
    ddar2[1][0].message("PRUEBA10");
    ddar2[1][1].count(11);
    ddar2[1][1].message("PRUEBA11");
    ddar2[1][2].count(12);
    ddar2[1][2].message("PRUEBA12");

    try
    {
        getArrDDatos_ret = proxy->getArrDDatos(ddar1, ddar2, ddar3);

        if(ddar3[0][0].count() != 7 || ddar3[0][0].message().compare("PRUEBA7") != 0 || ddar3[0][1].count() != 8 || ddar3[0][1].message().compare("PRUEBA8") != 0 ||
                ddar3[0][2].count() != 9 || ddar3[0][2].message().compare("PRUEBA9") != 0 || ddar3[1][0].count() != 10 || ddar3[1][0].message().compare("PRUEBA10") != 0 ||
                ddar3[1][1].count() != 11 || ddar3[1][1].message().compare("PRUEBA11") != 0 || ddar3[1][2].count() != 12 || ddar3[1][2].message().compare("PRUEBA12") != 0 ||
                getArrDDatos_ret[0][0].count() != 1 || getArrDDatos_ret[0][0].message().compare("PRUEBA1") != 0 ||
                getArrDDatos_ret[0][1].count() != 2 || getArrDDatos_ret[0][1].message().compare("PRUEBA2") != 0 ||
                getArrDDatos_ret[0][2].count() != 3 || getArrDDatos_ret[0][2].message().compare("PRUEBA3") != 0 ||
                getArrDDatos_ret[1][0].count() != 4 || getArrDDatos_ret[1][0].message().compare("PRUEBA4") != 0 ||
                getArrDDatos_ret[1][1].count() != 5 || getArrDDatos_ret[1][1].message().compare("PRUEBA5") != 0 ||
                getArrDDatos_ret[1][2].count() != 6 || getArrDDatos_ret[1][2].message().compare("PRUEBA6") != 0 ||
                ddar2[0][0].count() != 1 || ddar2[0][0].message().compare("PRUEBA1") != 0 || ddar2[0][1].count() != 2 || ddar2[0][1].message().compare("PRUEBA2") != 0 ||
                ddar2[0][2].count() != 3 || ddar2[0][2].message().compare("PRUEBA3") != 0 || ddar2[1][0].count() != 4 || ddar2[1][0].message().compare("PRUEBA4") != 0 ||
                ddar2[1][1].count() != 5 || ddar2[1][1].message().compare("PRUEBA5") != 0 || ddar2[1][2].count() != 6 || ddar2[1][2].message().compare("PRUEBA6") != 0 ||
                ddar1[0][0].count() != 1 || ddar1[0][0].message().compare("PRUEBA1") != 0 || ddar1[0][1].count() != 2 || ddar1[0][1].message().compare("PRUEBA2") != 0 ||
                ddar1[0][2].count() != 3 || ddar1[0][2].message().compare("PRUEBA3") != 0 || ddar1[1][0].count() != 4 || ddar1[1][0].message().compare("PRUEBA4") != 0 ||
                ddar1[1][1].count() != 5 || ddar1[1][1].message().compare("PRUEBA5") != 0 || ddar1[1][2].count() != 6 || ddar1[1][2].message().compare("PRUEBA6") != 0 )
        {
            std::cout << "TEST FAILED<getArrDDatos>: Wrong values" << std::endl;
            _exit(-1);
        }
    }
    catch(SystemException &ex)
    {
        std::cout << "TEST FAILED<getArrDDatos>: " << ex.what() << std::endl;
        _exit(-1);
    }

    cdarray cdar1;
    cdarray cdar2;
    cdarray cdar3;
    cdarray getArrCDatos_ret;

    cdar1[0].count(1);
    cdar1[0].message("PRUEBA1");
    cdar1[1].count(2);
    cdar1[1].message("PRUEBA2");
    cdar2[0].count(3);
    cdar2[0].message("PRUEBA3");
    cdar2[1].count(4);
    cdar2[1].message("PRUEBA4");

    try
    {
        getArrCDatos_ret = proxy->getArrCDatos(cdar1, cdar2, cdar3);

        if(cdar3[0].count() != 3 || cdar3[0].message().compare("PRUEBA3") != 0 || cdar3[1].count() != 4 || cdar3[1].message().compare("PRUEBA4") != 0 ||
                getArrCDatos_ret[0].count() != 1 || getArrCDatos_ret[0].message().compare("PRUEBA1") != 0 ||
                getArrCDatos_ret[1].count() != 2 || getArrCDatos_ret[1].message().compare("PRUEBA2") != 0 ||
                cdar2[0].count() != 1 || cdar2[0].message().compare("PRUEBA1") != 0 || cdar2[1].count() != 2 || cdar2[1].message().compare("PRUEBA2") != 0 ||
                cdar1[0].count() != 1 || cdar1[0].message().compare("PRUEBA1") != 0 || cdar1[1].count() != 2 || cdar1[1].message().compare("PRUEBA2") != 0 )
        {
            std::cout << "TEST FAILED<getArrCDatos>: Wrong values" << std::endl;
            _exit(-1);
        }
    }
    catch(SystemException &ex)
    {
        std::cout << "TEST FAILED<getArrCDatos>: " << ex.what() << std::endl;
        _exit(-1);
    }

    SequenceTest::Arrays array1;
    SequenceTest::Arrays array2;
    SequenceTest::Arrays array3;
    SequenceTest::Arrays getArrays_ret;

    array1.strings()[0] = "PRUEBA1";
    array1.strings()[1] = "PRUEBA2";
    array1.stringss()[0][0] = "PRUEBA1";
    array1.stringss()[0][1] = "PRUEBA2";
    array1.stringss()[0][2] = "PRUEBA3";
    array1.stringss()[1][0] = "PRUEBA4";
    array1.stringss()[1][1] = "PRUEBA5";
    array1.stringss()[1][2] = "PRUEBA6";
    array1.datos()[0].count(1);
    array1.datos()[0].message("PRUEBA1");
    array1.datos()[1].count(2);
    array1.datos()[1].message("PRUEBA2");
    array1.datoss()[0][0].count(1);
    array1.datoss()[0][0].message("PRUEBA1");
    array1.datoss()[0][1].count(2);
    array1.datoss()[0][1].message("PRUEBA2");
    array1.datoss()[0][2].count(3);
    array1.datoss()[0][2].message("PRUEBA3");
    array1.datoss()[1][0].count(4);
    array1.datoss()[1][0].message("PRUEBA4");
    array1.datoss()[1][1].count(5);
    array1.datoss()[1][1].message("PRUEBA5");
    array1.datoss()[1][2].count(6);
    array1.datoss()[1][2].message("PRUEBA6");
    array1.arradat()[0][0][0].count(1);
    array1.arradat()[0][0][0].message("PRUEBA1");
    array1.arradat()[0][0][1].count(2);
    array1.arradat()[0][0][1].message("PRUEBA2");
    array1.arradat()[0][0][2].count(3);
    array1.arradat()[0][0][2].message("PRUEBA3");
    array1.arradat()[0][1][0].count(4);
    array1.arradat()[0][1][0].message("PRUEBA4");
    array1.arradat()[0][1][1].count(5);
    array1.arradat()[0][1][1].message("PRUEBA5");
    array1.arradat()[0][1][2].count(6);
    array1.arradat()[0][1][2].message("PRUEBA6");
    array1.arradat()[1][0][0].count(7);
    array1.arradat()[1][0][0].message("PRUEBA7");
    array1.arradat()[1][0][1].count(8);
    array1.arradat()[1][0][1].message("PRUEBA8");
    array1.arradat()[1][0][2].count(9);
    array1.arradat()[1][0][2].message("PRUEBA9");
    array1.arradat()[1][1][0].count(10);
    array1.arradat()[1][1][0].message("PRUEBA10");
    array1.arradat()[1][1][1].count(11);
    array1.arradat()[1][1][1].message("PRUEBA11");
    array1.arradat()[1][1][2].count(12);
    array1.arradat()[1][1][2].message("PRUEBA12");
    array2.strings()[0] = "PRUEBA13";
    array2.strings()[1] = "PRUEBA14";
    array2.stringss()[0][0] = "PRUEBA13";
    array2.stringss()[0][1] = "PRUEBA14";
    array2.stringss()[0][2] = "PRUEBA15";
    array2.stringss()[1][0] = "PRUEBA16";
    array2.stringss()[1][1] = "PRUEBA17";
    array2.stringss()[1][2] = "PRUEBA18";
    array2.datos()[0].count(13);
    array2.datos()[0].message("PRUEBA13");
    array2.datos()[1].count(14);
    array2.datos()[1].message("PRUEBA14");
    array2.datoss()[0][0].count(13);
    array2.datoss()[0][0].message("PRUEBA13");
    array2.datoss()[0][1].count(14);
    array2.datoss()[0][1].message("PRUEBA14");
    array2.datoss()[0][2].count(15);
    array2.datoss()[0][2].message("PRUEBA15");
    array2.datoss()[1][0].count(16);
    array2.datoss()[1][0].message("PRUEBA16");
    array2.datoss()[1][1].count(17);
    array2.datoss()[1][1].message("PRUEBA17");
    array2.datoss()[1][2].count(18);
    array2.datoss()[1][2].message("PRUEBA18");
    array2.arradat()[0][0][0].count(13);
    array2.arradat()[0][0][0].message("PRUEBA13");
    array2.arradat()[0][0][1].count(14);
    array2.arradat()[0][0][1].message("PRUEBA14");
    array2.arradat()[0][0][2].count(15);
    array2.arradat()[0][0][2].message("PRUEBA15");
    array2.arradat()[0][1][0].count(16);
    array2.arradat()[0][1][0].message("PRUEBA16");
    array2.arradat()[0][1][1].count(17);
    array2.arradat()[0][1][1].message("PRUEBA17");
    array2.arradat()[0][1][2].count(18);
    array2.arradat()[0][1][2].message("PRUEBA18");
    array2.arradat()[1][0][0].count(19);
    array2.arradat()[1][0][0].message("PRUEBA19");
    array2.arradat()[1][0][1].count(20);
    array2.arradat()[1][0][1].message("PRUEBA20");
    array2.arradat()[1][0][2].count(21);
    array2.arradat()[1][0][2].message("PRUEBA21");
    array2.arradat()[1][1][0].count(22);
    array2.arradat()[1][1][0].message("PRUEBA22");
    array2.arradat()[1][1][1].count(23);
    array2.arradat()[1][1][1].message("PRUEBA23");
    array2.arradat()[1][1][2].count(24);
    array2.arradat()[1][1][2].message("PRUEBA24");

    try
    {
        getArrays_ret = proxy->getArrays(array1, array2, array3);

        if(array3.strings()[0].compare("PRUEBA13") != 0 || array3.strings()[1].compare("PRUEBA14") != 0 ||
                array3.stringss()[0][0].compare("PRUEBA13") != 0 || array3.stringss()[0][1].compare("PRUEBA14") != 0 ||
                array3.stringss()[0][2].compare("PRUEBA15") != 0 || array3.stringss()[1][0].compare("PRUEBA16") != 0 ||
                array3.stringss()[1][1].compare("PRUEBA17") != 0 || array3.stringss()[1][2].compare("PRUEBA18") != 0 ||
                array3.datos()[0].count() != 13 || array3.datos()[0].message().compare("PRUEBA13") != 0 ||
                array3.datos()[1].count() != 14 || array3.datos()[1].message().compare("PRUEBA14") != 0 ||
                array3.datoss()[0][0].count() != 13 || array3.datoss()[0][0].message().compare("PRUEBA13") != 0 ||
                array3.datoss()[0][1].count() != 14 || array3.datoss()[0][1].message().compare("PRUEBA14") != 0 ||
                array3.datoss()[0][2].count() != 15 || array3.datoss()[0][2].message().compare("PRUEBA15") != 0 ||
                array3.datoss()[1][0].count() != 16 || array3.datoss()[1][0].message().compare("PRUEBA16") != 0 ||
                array3.datoss()[1][1].count() != 17 || array3.datoss()[1][1].message().compare("PRUEBA17") != 0 ||
                array3.datoss()[1][2].count() != 18 || array3.datoss()[1][2].message().compare("PRUEBA18") != 0 ||
                array3.arradat()[0][0][0].count() != 13 || array3.arradat()[0][0][0].message().compare("PRUEBA13") != 0 ||
                array3.arradat()[0][0][1].count() != 14 || array3.arradat()[0][0][1].message().compare("PRUEBA14") != 0 ||
                array3.arradat()[0][0][2].count() != 15 || array3.arradat()[0][0][2].message().compare("PRUEBA15") != 0 ||
                array3.arradat()[0][1][0].count() != 16 || array3.arradat()[0][1][0].message().compare("PRUEBA16") != 0 ||
                array3.arradat()[0][1][1].count() != 17 || array3.arradat()[0][1][1].message().compare("PRUEBA17") != 0 ||
                array3.arradat()[0][1][2].count() != 18 || array3.arradat()[0][1][2].message().compare("PRUEBA18") != 0 ||
                array3.arradat()[1][0][0].count() != 19 || array3.arradat()[1][0][0].message().compare("PRUEBA19") != 0 ||
                array3.arradat()[1][0][1].count() != 20 || array3.arradat()[1][0][1].message().compare("PRUEBA20") != 0 ||
                array3.arradat()[1][0][2].count() != 21 || array3.arradat()[1][0][2].message().compare("PRUEBA21") != 0 ||
                array3.arradat()[1][1][0].count() != 22 || array3.arradat()[1][1][0].message().compare("PRUEBA22") != 0 ||
                array3.arradat()[1][1][1].count() != 23 || array3.arradat()[1][1][1].message().compare("PRUEBA23") != 0 ||
                array3.arradat()[1][1][2].count() != 24 || array3.arradat()[1][1][2].message().compare("PRUEBA24") != 0 ||
                getArrays_ret.strings()[0].compare("PRUEBA1") != 0 || getArrays_ret.strings()[1].compare("PRUEBA2") != 0 ||
                getArrays_ret.stringss()[0][0].compare("PRUEBA1") != 0 || getArrays_ret.stringss()[0][1].compare("PRUEBA2") != 0 ||
                getArrays_ret.stringss()[0][2].compare("PRUEBA3") != 0 || getArrays_ret.stringss()[1][0].compare("PRUEBA4") != 0 ||
                getArrays_ret.stringss()[1][1].compare("PRUEBA5") != 0 || getArrays_ret.stringss()[1][2].compare("PRUEBA6") != 0 ||
                getArrays_ret.datos()[0].count() != 1 || getArrays_ret.datos()[0].message().compare("PRUEBA1") != 0 ||
                getArrays_ret.datos()[1].count() != 2 || getArrays_ret.datos()[1].message().compare("PRUEBA2") != 0 ||
                getArrays_ret.datoss()[0][0].count() != 1 || getArrays_ret.datoss()[0][0].message().compare("PRUEBA1") != 0 ||
                getArrays_ret.datoss()[0][1].count() != 2 || getArrays_ret.datoss()[0][1].message().compare("PRUEBA2") != 0 ||
                getArrays_ret.datoss()[0][2].count() != 3 || getArrays_ret.datoss()[0][2].message().compare("PRUEBA3") != 0 ||
                getArrays_ret.datoss()[1][0].count() != 4 || getArrays_ret.datoss()[1][0].message().compare("PRUEBA4") != 0 ||
                getArrays_ret.datoss()[1][1].count() != 5 || getArrays_ret.datoss()[1][1].message().compare("PRUEBA5") != 0 ||
                getArrays_ret.datoss()[1][2].count() != 6 || getArrays_ret.datoss()[1][2].message().compare("PRUEBA6") != 0 ||
                getArrays_ret.arradat()[0][0][0].count() != 1 || getArrays_ret.arradat()[0][0][0].message().compare("PRUEBA1") != 0 ||
                getArrays_ret.arradat()[0][0][1].count() != 2 || getArrays_ret.arradat()[0][0][1].message().compare("PRUEBA2") != 0 ||
                getArrays_ret.arradat()[0][0][2].count() != 3 || getArrays_ret.arradat()[0][0][2].message().compare("PRUEBA3") != 0 ||
                getArrays_ret.arradat()[0][1][0].count() != 4 || getArrays_ret.arradat()[0][1][0].message().compare("PRUEBA4") != 0 ||
                getArrays_ret.arradat()[0][1][1].count() != 5 || getArrays_ret.arradat()[0][1][1].message().compare("PRUEBA5") != 0 ||
                getArrays_ret.arradat()[0][1][2].count() != 6 || getArrays_ret.arradat()[0][1][2].message().compare("PRUEBA6") != 0 ||
                getArrays_ret.arradat()[1][0][0].count() != 7 || getArrays_ret.arradat()[1][0][0].message().compare("PRUEBA7") != 0 ||
                getArrays_ret.arradat()[1][0][1].count() != 8 || getArrays_ret.arradat()[1][0][1].message().compare("PRUEBA8") != 0 ||
                getArrays_ret.arradat()[1][0][2].count() != 9 || getArrays_ret.arradat()[1][0][2].message().compare("PRUEBA9") != 0 ||
                getArrays_ret.arradat()[1][1][0].count() != 10 || getArrays_ret.arradat()[1][1][0].message().compare("PRUEBA10") != 0 ||
                getArrays_ret.arradat()[1][1][1].count() != 11 || getArrays_ret.arradat()[1][1][1].message().compare("PRUEBA11") != 0 ||
                getArrays_ret.arradat()[1][1][2].count() != 12 || getArrays_ret.arradat()[1][1][2].message().compare("PRUEBA12") != 0 ||
                array2.strings()[0].compare("PRUEBA1") != 0 || array2.strings()[1].compare("PRUEBA2") != 0 ||
                array2.stringss()[0][0].compare("PRUEBA1") != 0 || array2.stringss()[0][1].compare("PRUEBA2") != 0 ||
                array2.stringss()[0][2].compare("PRUEBA3") != 0 || array2.stringss()[1][0].compare("PRUEBA4") != 0 ||
                array2.stringss()[1][1].compare("PRUEBA5") != 0 || array2.stringss()[1][2].compare("PRUEBA6") != 0 ||
                array2.datos()[0].count() != 1 || array2.datos()[0].message().compare("PRUEBA1") != 0 ||
                array2.datos()[1].count() != 2 || array2.datos()[1].message().compare("PRUEBA2") != 0 ||
                array2.datoss()[0][0].count() != 1 || array2.datoss()[0][0].message().compare("PRUEBA1") != 0 ||
                array2.datoss()[0][1].count() != 2 || array2.datoss()[0][1].message().compare("PRUEBA2") != 0 ||
                array2.datoss()[0][2].count() != 3 || array2.datoss()[0][2].message().compare("PRUEBA3") != 0 ||
                array2.datoss()[1][0].count() != 4 || array2.datoss()[1][0].message().compare("PRUEBA4") != 0 ||
                array2.datoss()[1][1].count() != 5 || array2.datoss()[1][1].message().compare("PRUEBA5") != 0 ||
                array2.datoss()[1][2].count() != 6 || array2.datoss()[1][2].message().compare("PRUEBA6") != 0 ||
                array2.arradat()[0][0][0].count() != 1 || array2.arradat()[0][0][0].message().compare("PRUEBA1") != 0 ||
                array2.arradat()[0][0][1].count() != 2 || array2.arradat()[0][0][1].message().compare("PRUEBA2") != 0 ||
                array2.arradat()[0][0][2].count() != 3 || array2.arradat()[0][0][2].message().compare("PRUEBA3") != 0 ||
                array2.arradat()[0][1][0].count() != 4 || array2.arradat()[0][1][0].message().compare("PRUEBA4") != 0 ||
                array2.arradat()[0][1][1].count() != 5 || array2.arradat()[0][1][1].message().compare("PRUEBA5") != 0 ||
                array2.arradat()[0][1][2].count() != 6 || array2.arradat()[0][1][2].message().compare("PRUEBA6") != 0 ||
                array2.arradat()[1][0][0].count() != 7 || array2.arradat()[1][0][0].message().compare("PRUEBA7") != 0 ||
                array2.arradat()[1][0][1].count() != 8 || array2.arradat()[1][0][1].message().compare("PRUEBA8") != 0 ||
                array2.arradat()[1][0][2].count() != 9 || array2.arradat()[1][0][2].message().compare("PRUEBA9") != 0 ||
                array2.arradat()[1][1][0].count() != 10 || array2.arradat()[1][1][0].message().compare("PRUEBA10") != 0 ||
                array2.arradat()[1][1][1].count() != 11 || array2.arradat()[1][1][1].message().compare("PRUEBA11") != 0 ||
                array2.arradat()[1][1][2].count() != 12 || array2.arradat()[1][1][2].message().compare("PRUEBA12") != 0 ||
                array1.strings()[0].compare("PRUEBA1") != 0 || array1.strings()[1].compare("PRUEBA2") != 0 ||
                array1.stringss()[0][0].compare("PRUEBA1") != 0 || array1.stringss()[0][1].compare("PRUEBA2") != 0 ||
                array1.stringss()[0][2].compare("PRUEBA3") != 0 || array1.stringss()[1][0].compare("PRUEBA4") != 0 ||
                array1.stringss()[1][1].compare("PRUEBA5") != 0 || array1.stringss()[1][2].compare("PRUEBA6") != 0 ||
                array1.datos()[0].count() != 1 || array1.datos()[0].message().compare("PRUEBA1") != 0 ||
                array1.datos()[1].count() != 2 || array1.datos()[1].message().compare("PRUEBA2") != 0 ||
                array1.datoss()[0][0].count() != 1 || array1.datoss()[0][0].message().compare("PRUEBA1") != 0 ||
                array1.datoss()[0][1].count() != 2 || array1.datoss()[0][1].message().compare("PRUEBA2") != 0 ||
                array1.datoss()[0][2].count() != 3 || array1.datoss()[0][2].message().compare("PRUEBA3") != 0 ||
                array1.datoss()[1][0].count() != 4 || array1.datoss()[1][0].message().compare("PRUEBA4") != 0 ||
                array1.datoss()[1][1].count() != 5 || array1.datoss()[1][1].message().compare("PRUEBA5") != 0 ||
                array1.datoss()[1][2].count() != 6 || array1.datoss()[1][2].message().compare("PRUEBA6") != 0 ||
                array1.arradat()[0][0][0].count() != 1 || array1.arradat()[0][0][0].message().compare("PRUEBA1") != 0 ||
                array1.arradat()[0][0][1].count() != 2 || array1.arradat()[0][0][1].message().compare("PRUEBA2") != 0 ||
                array1.arradat()[0][0][2].count() != 3 || array1.arradat()[0][0][2].message().compare("PRUEBA3") != 0 ||
                array1.arradat()[0][1][0].count() != 4 || array1.arradat()[0][1][0].message().compare("PRUEBA4") != 0 ||
                array1.arradat()[0][1][1].count() != 5 || array1.arradat()[0][1][1].message().compare("PRUEBA5") != 0 ||
                array1.arradat()[0][1][2].count() != 6 || array1.arradat()[0][1][2].message().compare("PRUEBA6") != 0 ||
                array1.arradat()[1][0][0].count() != 7 || array1.arradat()[1][0][0].message().compare("PRUEBA7") != 0 ||
                array1.arradat()[1][0][1].count() != 8 || array1.arradat()[1][0][1].message().compare("PRUEBA8") != 0 ||
                array1.arradat()[1][0][2].count() != 9 || array1.arradat()[1][0][2].message().compare("PRUEBA9") != 0 ||
                array1.arradat()[1][1][0].count() != 10 || array1.arradat()[1][1][0].message().compare("PRUEBA10") != 0 ||
                array1.arradat()[1][1][1].count() != 11 || array1.arradat()[1][1][1].message().compare("PRUEBA11") != 0 ||
                array1.arradat()[1][1][2].count() != 12 || array1.arradat()[1][1][2].message().compare("PRUEBA12") != 0)
        {
            std::cout << "TEST FAILED<getArrays>: Wrong values" << std::endl;
            _exit(-1);
        }
    }
    catch(SystemException &ex)
    {
        std::cout << "TEST FAILED<getArrays>: " << ex.what() << std::endl;
        _exit(-1);
    }

    std::cout << "TEST SUCCESFULLY" << std::endl;

    delete(proxy);
    delete(transport);
    delete(protocol);

    _exit(0);
    return 0;
}
