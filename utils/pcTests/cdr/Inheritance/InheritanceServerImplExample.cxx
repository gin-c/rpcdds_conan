/*************************************************************************
 * Copyright (c) 2013 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * fastrpc_LICENSE file included in this fastrpc distribution.
 *
 *************************************************************************
 * 
 * @file InheritanceServerImplExample.cxx
 * This source file contains an example of the declaration of a servant.
 *
 * This file was generated by the tool fastrpcgen.
 */

#include "InheritanceServerImplExample.h"

static ModuleA::Interface1::Dato function1_data;
static ModuleA::Interface1::Dato function1_data2;
static ModuleA::Interface1::Dato function1_data3;

ModuleA::Interface1::Dato Interface1ServerImplExample::function1(/*in*/ const ModuleA::Interface1::Dato& data)
{
    ModuleA::Interface1::Dato  return_(data);

    ++return_.count();
   
    return return_;
} 

void Interface1ServerImplExample::function1_set(/*in*/ const ModuleA::Interface1::Dato& data)
{
    function1_data = data;
    ++function1_data.count();
} 

ModuleA::Interface1::Dato Interface1ServerImplExample::function1_get()
{
    return function1_data;
} 






ModuleA::Interface1::Dato Interface2ServerImplExample::function1(/*in*/ const ModuleA::Interface1::Dato& data)
{
    ModuleA::Interface1::Dato  return_(data);
   
    return return_;
} 

void Interface2ServerImplExample::function1_set(/*in*/ const ModuleA::Interface1::Dato& data)
{
    function1_data2 = data;
} 

ModuleA::Interface1::Dato Interface2ServerImplExample::function1_get()
{
    return function1_data2;
} 

int32_t Interface2ServerImplExample::function2(/*in*/ int32_t count)
{
    return count;
} 




ModuleA::Interface1::Dato Interface3ServerImplExample::function1(/*in*/ const ModuleA::Interface1::Dato& data)
{
    ModuleA::Interface1::Dato  return_(data);

    return_.count() += 2;
   
    return return_;
} 

void Interface3ServerImplExample::function1_set(/*in*/ const ModuleA::Interface1::Dato& data)
{
    function1_data3 = data;

    function1_data3.count() += 2;
} 

ModuleA::Interface1::Dato Interface3ServerImplExample::function1_get()
{
    return function1_data3;
} 

ModuleB::Interface3::Dato Interface3ServerImplExample::function3(/*in*/ const ModuleB::Interface3::Dato& data)
{
    return data;
} 




