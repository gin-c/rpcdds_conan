/*************************************************************************
 * Copyright (c) 2012 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * FASTRPC_LICENSE file included in this FASTRPC distribution.
 *
 *************************************************************************
 * 
 * @file BodyParamTestServerImplExample.cxx
 * This source file contains an example of the declaration of a servant.
 *
 * This file was generated by the tool rpcrestgen.
 */

#include "BodyParamTestServerImplExample.h"

#include <iostream>
#include <string>

using namespace std;


using namespace BodyParamTest;
using namespace ::resourceResource;


PostBodyParamResponse resourceResourceServerImplExample::postBodyParam(/*in*/ const PostBodyParamRequest& PostBodyParamRequest)
{
    PostBodyParamResponse postBodyParam_ret;

	string response = "";

	if(PostBodyParamRequest._d() == 1) {
		response = "<Response>";
		response += PostBodyParamRequest.xmlRepresentation();
		response += "</Response>";

        postBodyParam_ret._d() = 1;
		postBodyParam_ret.xmlPostBodyParamResponse().status() = 200;
		postBodyParam_ret.xmlPostBodyParamResponse().xmlRepresentation(response);
		cout << "XML response: " ;
	}
    else
    {
		response = "{RESPONSE:\"";
		response += PostBodyParamRequest.jsonRepresentation();
		response += "\"}";
		
        postBodyParam_ret._d() = 2;
		postBodyParam_ret.jsonPostBodyParamResponse().status() = 200;
		postBodyParam_ret.jsonPostBodyParamResponse().jsonRepresentation(response);
		cout << "JSON response: " ;
	}

	cout << response << endl;
   
    return postBodyParam_ret;
} 

