/* -*- C++ -*- */
/* Generated by opendds_idl.exe version 3.3 (ACE version 5.6a_p13) running on input file D:\richi\workspace\desarrollo\DDS\proyectos\rpcdds\idl\MessageHeader.idl*/
#ifndef OPENDDS_IDL_GENERATED_MESSAGEHEADERTYPESUPPORTIMPL_H_JJ7N5Q
#define OPENDDS_IDL_GENERATED_MESSAGEHEADERTYPESUPPORTIMPL_H_JJ7N5Q
#include "dds/DCPS/Definitions.h"
#include "MessageHeaderC.h"
#include "dds/DCPS/Serializer.h"


/* Begin STRUCT: Identification */

namespace OpenDDS { namespace DCPS {

void gen_find_size(const Identification& stru, size_t& size, size_t& padding);

bool operator<<(Serializer& strm, const Identification& stru);

bool operator>>(Serializer& strm, Identification& stru);

}  }

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
namespace OpenDDS { namespace DCPS {

class MetaStruct;

template<typename T>
const MetaStruct& getMetaStruct();

template<>
const MetaStruct& getMetaStruct<Identification>();
}  }

#endif

/* End STRUCT: Identification */


/* Begin STRUCT: RequestHeader */

namespace OpenDDS { namespace DCPS {

void gen_find_size(const RequestHeader& stru, size_t& size, size_t& padding);

bool operator<<(Serializer& strm, const RequestHeader& stru);

bool operator>>(Serializer& strm, RequestHeader& stru);

}  }

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
namespace OpenDDS { namespace DCPS {

template<>
const MetaStruct& getMetaStruct<RequestHeader>();
}  }

#endif

/* End STRUCT: RequestHeader */


/* Begin STRUCT: ReplyHeader */

namespace OpenDDS { namespace DCPS {

void gen_find_size(const ReplyHeader& stru, size_t& size, size_t& padding);

bool operator<<(Serializer& strm, const ReplyHeader& stru);

bool operator>>(Serializer& strm, ReplyHeader& stru);

}  }

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
namespace OpenDDS { namespace DCPS {

template<>
const MetaStruct& getMetaStruct<ReplyHeader>();
}  }

#endif

/* End STRUCT: ReplyHeader */
#endif /* OPENDDS_IDL_GENERATED_MESSAGEHEADERTYPESUPPORTIMPL_H_JJ7N5Q */
